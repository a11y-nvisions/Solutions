/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/contents/cm.js":
/*!****************************!*\
  !*** ./src/contents/cm.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _cnt_codes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cnt_codes */ \"./src/contents/cnt_codes.js\");\n/* harmony import */ var _cnt_treeview__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cnt_treeview */ \"./src/contents/cnt_treeview.js\");\n/* harmony import */ var _cnt_tab__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cnt_tab */ \"./src/contents/cnt_tab.js\");\n/* harmony import */ var _cnt_commons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cnt_commons */ \"./src/contents/cnt_commons.js\");\n\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((() => {\n  const content = Object.assign({}, _cnt_treeview__WEBPACK_IMPORTED_MODULE_1__, _cnt_tab__WEBPACK_IMPORTED_MODULE_2__, _cnt_commons__WEBPACK_IMPORTED_MODULE_3__);\n  window.addEventListener('DOMContentLoaded', () => {\n    document.querySelectorAll('[data-content]').forEach((el, idx) => {\n      const keys = Object.keys(content);\n      keys.forEach(k => {\n        if (el.dataset.content === k) {\n          el.innerHTML = content[k];\n        }\n      });\n    }); //codes\n\n    document.querySelectorAll('code.cl').forEach((el, idx) => {\n      const keys = Object.keys(_cnt_codes__WEBPACK_IMPORTED_MODULE_0__.CodeDict);\n      keys.forEach(k => {\n        if (el.classList.contains(k)) {\n          el.textContent = _cnt_codes__WEBPACK_IMPORTED_MODULE_0__.CodeDict[k];\n        }\n      });\n    });\n  });\n})());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29udGVudHMvY20uanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHJlZXZpZXctY29tcG9uZW50Ly4vc3JjL2NvbnRlbnRzL2NtLmpzPzA4MzYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29kZURpY3QgfSBmcm9tIFwiLi9jbnRfY29kZXNcIjtcbmltcG9ydCAqIGFzIHBhZ2VfdHJlZXZpZXcgZnJvbSBcIi4vY250X3RyZWV2aWV3XCI7XG5pbXBvcnQgKiBhcyBwYWdlX3RhYiBmcm9tICcuL2NudF90YWInO1xuaW1wb3J0ICogYXMgcGFnZV9jb21tb25zIGZyb20gXCIuL2NudF9jb21tb25zXCI7XG5leHBvcnQgZGVmYXVsdCAoKCkgPT4ge1xuICBjb25zdCBjb250ZW50ID0gT2JqZWN0LmFzc2lnbih7fSwgcGFnZV90cmVldmlldywgcGFnZV90YWIsIHBhZ2VfY29tbW9ucyk7XG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgKCkgPT4ge1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ1tkYXRhLWNvbnRlbnRdJykuZm9yRWFjaCgoZWwsIGlkeCkgPT4ge1xuICAgICAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKGNvbnRlbnQpO1xuICAgICAga2V5cy5mb3JFYWNoKGsgPT4ge1xuICAgICAgICBpZiAoZWwuZGF0YXNldC5jb250ZW50ID09PSBrKSB7XG4gICAgICAgICAgZWwuaW5uZXJIVE1MID0gY29udGVudFtrXTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSk7IC8vY29kZXNcblxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ2NvZGUuY2wnKS5mb3JFYWNoKChlbCwgaWR4KSA9PiB7XG4gICAgICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXMoQ29kZURpY3QpO1xuICAgICAga2V5cy5mb3JFYWNoKGsgPT4ge1xuICAgICAgICBpZiAoZWwuY2xhc3NMaXN0LmNvbnRhaW5zKGspKSB7XG4gICAgICAgICAgZWwudGV4dENvbnRlbnQgPSBDb2RlRGljdFtrXTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSk7XG4gIH0pO1xufSkoKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/contents/cm.js\n");

/***/ }),

/***/ "./src/contents/cnt_codes.js":
/*!***********************************!*\
  !*** ./src/contents/cnt_codes.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CodeDict\": () => (/* binding */ CodeDict)\n/* harmony export */ });\nconst CodeDict = {\n  \"rTree\": `<element role=\"tree\">`,\n  \"rTreeItem\": `<element role=\"treeitem\">`,\n  \"rGroup\": `<element role=\"group\">`,\n  \"rNone\": `<element role=\"none\">`,\n  \"rTablist\": `<element role=\"tablist\">`,\n  \"rTab\": `<element role=\"tab\">`,\n  \"rTabpanel\": `<element role=\"tabpanel\">`,\n  \"nRadio\": `<input type=\"radio\">`,\n  \"nCheckbox\": `<input type=\"checkbox\">`,\n  \"nEdit\": `<input type=\"text\">`,\n  \"attr_rTree\": `role=\"tree\"`,\n  \"attr_rTreeItem\": `role=\"treeitem\"`,\n  \"attr_rGroup\": `role=\"group\"`,\n  \"attr_rTablist\": `role=\"tablist\"`,\n  \"attr_rTabpanel\": `role=\"tabpanel\"`,\n  \"attr_rTab\": `role=\"tab\"`,\n  \"attr_rNone\": `role=\"none\"`,\n  \"attr_tabidx_0\": `tabindex=\"0\"`,\n  \"attr_tabidx_m1\": `tabindex=\"-1\"`,\n  \"attr_aLabel\": `aria-label=\"Text\"`,\n  \"attr_aLabelledby\": `aria-labelledby=\"IDREF\"`,\n  \"attr_aOrientation\": `aria-orientation=\"horizontal|vertical\"`,\n  \"attr_aSelected\": `aria-selected=\"true|false\"`,\n  \"attr_aChecked\": `aria-checked=\"true|false|mixed\"`,\n  \"attr_aPressed\": `aria-pressed=\"true|false\"`,\n  \"attr_aExpanded\": `aria-selected=\"true|false\"`,\n  \"attr_aControls\": `aria-controls=\"IDREF\"`,\n  \"aLabel\": `<element aria-label=\"Text\">`,\n  \"aLabelledby\": `<element aria-labelleby=\"IDREF\">`,\n  \"aOrientation\": `<element aria-orientation=\"horizontal|vertical\">`,\n  \"aControls\": `<element aria-controls=\"IDREF\">`,\n  \"aChecked\": `<element aria-checked=\"true|false|mixed\">`,\n  \"aPressed\": `<element aria-pressed=\"true|false\">`,\n  \"aExpanded\": `<element aria-selected=\"true|false\">`,\n  \"aSelected\": `<element aria-selected=\"true|false\">`,\n  \"tag_ul\": `<ul>`,\n  \"tag_ol\": `<ol>`,\n  \"tag_li\": `<li>`,\n  \"tag_p\": `<p>`,\n  \"tag_div\": `<div>`,\n  \"tag_anchor\": `<a>`,\n  \"tag_button\": `<button>`,\n  \"tag_input\": `<input>`,\n  \"ex-Treeview\": `<ul role=\"tree\">\n    <li role=\"treeitem\" tabindex=\"0\">\n        아이템1\n        <ul role=\"group\">\n            <li role=\"treeitem\">아이템1-서브1</li>\n            <li role=\"treeitem\">아이템1-서브2</li>\n        </ul>\n    </li>\n    <li role=\"treeitem\">...</li>\n    <li role=\"treeitem\">...</li>\n</ul>`,\n  \"ex-tab\": `<ul role=\"tablist\" aria-orientation=\"horizontal\">\n    <li role=\"tab\" tabindex=\"0\" aria-selected=\"true\" aria-controls=\"tabpanel-1\">1페이지</li>\n    <li role=\"tab\" aria-controls=\"tabpanel-2\">...</li>\n    <li role=\"tab\"  aria-controls=\"tabpanel-3\">...</li>\n</ul>\n<div id=\"tabpanel-1\" tabindex=\"0\">...</div>\n<div id=\"tabpanel-2\" tabindex=\"0\">...</div>\n<div id=\"tabpanel-3\" tabindex=\"0\">...</div>\n`\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29udGVudHMvY250X2NvZGVzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHJlZXZpZXctY29tcG9uZW50Ly4vc3JjL2NvbnRlbnRzL2NudF9jb2Rlcy5qcz84ZTc0Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBDb2RlRGljdCA9IHtcbiAgXCJyVHJlZVwiOiBgPGVsZW1lbnQgcm9sZT1cInRyZWVcIj5gLFxuICBcInJUcmVlSXRlbVwiOiBgPGVsZW1lbnQgcm9sZT1cInRyZWVpdGVtXCI+YCxcbiAgXCJyR3JvdXBcIjogYDxlbGVtZW50IHJvbGU9XCJncm91cFwiPmAsXG4gIFwick5vbmVcIjogYDxlbGVtZW50IHJvbGU9XCJub25lXCI+YCxcbiAgXCJyVGFibGlzdFwiOiBgPGVsZW1lbnQgcm9sZT1cInRhYmxpc3RcIj5gLFxuICBcInJUYWJcIjogYDxlbGVtZW50IHJvbGU9XCJ0YWJcIj5gLFxuICBcInJUYWJwYW5lbFwiOiBgPGVsZW1lbnQgcm9sZT1cInRhYnBhbmVsXCI+YCxcbiAgXCJuUmFkaW9cIjogYDxpbnB1dCB0eXBlPVwicmFkaW9cIj5gLFxuICBcIm5DaGVja2JveFwiOiBgPGlucHV0IHR5cGU9XCJjaGVja2JveFwiPmAsXG4gIFwibkVkaXRcIjogYDxpbnB1dCB0eXBlPVwidGV4dFwiPmAsXG4gIFwiYXR0cl9yVHJlZVwiOiBgcm9sZT1cInRyZWVcImAsXG4gIFwiYXR0cl9yVHJlZUl0ZW1cIjogYHJvbGU9XCJ0cmVlaXRlbVwiYCxcbiAgXCJhdHRyX3JHcm91cFwiOiBgcm9sZT1cImdyb3VwXCJgLFxuICBcImF0dHJfclRhYmxpc3RcIjogYHJvbGU9XCJ0YWJsaXN0XCJgLFxuICBcImF0dHJfclRhYnBhbmVsXCI6IGByb2xlPVwidGFicGFuZWxcImAsXG4gIFwiYXR0cl9yVGFiXCI6IGByb2xlPVwidGFiXCJgLFxuICBcImF0dHJfck5vbmVcIjogYHJvbGU9XCJub25lXCJgLFxuICBcImF0dHJfdGFiaWR4XzBcIjogYHRhYmluZGV4PVwiMFwiYCxcbiAgXCJhdHRyX3RhYmlkeF9tMVwiOiBgdGFiaW5kZXg9XCItMVwiYCxcbiAgXCJhdHRyX2FMYWJlbFwiOiBgYXJpYS1sYWJlbD1cIlRleHRcImAsXG4gIFwiYXR0cl9hTGFiZWxsZWRieVwiOiBgYXJpYS1sYWJlbGxlZGJ5PVwiSURSRUZcImAsXG4gIFwiYXR0cl9hT3JpZW50YXRpb25cIjogYGFyaWEtb3JpZW50YXRpb249XCJob3Jpem9udGFsfHZlcnRpY2FsXCJgLFxuICBcImF0dHJfYVNlbGVjdGVkXCI6IGBhcmlhLXNlbGVjdGVkPVwidHJ1ZXxmYWxzZVwiYCxcbiAgXCJhdHRyX2FDaGVja2VkXCI6IGBhcmlhLWNoZWNrZWQ9XCJ0cnVlfGZhbHNlfG1peGVkXCJgLFxuICBcImF0dHJfYVByZXNzZWRcIjogYGFyaWEtcHJlc3NlZD1cInRydWV8ZmFsc2VcImAsXG4gIFwiYXR0cl9hRXhwYW5kZWRcIjogYGFyaWEtc2VsZWN0ZWQ9XCJ0cnVlfGZhbHNlXCJgLFxuICBcImF0dHJfYUNvbnRyb2xzXCI6IGBhcmlhLWNvbnRyb2xzPVwiSURSRUZcImAsXG4gIFwiYUxhYmVsXCI6IGA8ZWxlbWVudCBhcmlhLWxhYmVsPVwiVGV4dFwiPmAsXG4gIFwiYUxhYmVsbGVkYnlcIjogYDxlbGVtZW50IGFyaWEtbGFiZWxsZWJ5PVwiSURSRUZcIj5gLFxuICBcImFPcmllbnRhdGlvblwiOiBgPGVsZW1lbnQgYXJpYS1vcmllbnRhdGlvbj1cImhvcml6b250YWx8dmVydGljYWxcIj5gLFxuICBcImFDb250cm9sc1wiOiBgPGVsZW1lbnQgYXJpYS1jb250cm9scz1cIklEUkVGXCI+YCxcbiAgXCJhQ2hlY2tlZFwiOiBgPGVsZW1lbnQgYXJpYS1jaGVja2VkPVwidHJ1ZXxmYWxzZXxtaXhlZFwiPmAsXG4gIFwiYVByZXNzZWRcIjogYDxlbGVtZW50IGFyaWEtcHJlc3NlZD1cInRydWV8ZmFsc2VcIj5gLFxuICBcImFFeHBhbmRlZFwiOiBgPGVsZW1lbnQgYXJpYS1zZWxlY3RlZD1cInRydWV8ZmFsc2VcIj5gLFxuICBcImFTZWxlY3RlZFwiOiBgPGVsZW1lbnQgYXJpYS1zZWxlY3RlZD1cInRydWV8ZmFsc2VcIj5gLFxuICBcInRhZ191bFwiOiBgPHVsPmAsXG4gIFwidGFnX29sXCI6IGA8b2w+YCxcbiAgXCJ0YWdfbGlcIjogYDxsaT5gLFxuICBcInRhZ19wXCI6IGA8cD5gLFxuICBcInRhZ19kaXZcIjogYDxkaXY+YCxcbiAgXCJ0YWdfYW5jaG9yXCI6IGA8YT5gLFxuICBcInRhZ19idXR0b25cIjogYDxidXR0b24+YCxcbiAgXCJ0YWdfaW5wdXRcIjogYDxpbnB1dD5gLFxuICBcImV4LVRyZWV2aWV3XCI6IGA8dWwgcm9sZT1cInRyZWVcIj5cbiAgICA8bGkgcm9sZT1cInRyZWVpdGVtXCIgdGFiaW5kZXg9XCIwXCI+XG4gICAgICAgIOyVhOydtO2FnDFcbiAgICAgICAgPHVsIHJvbGU9XCJncm91cFwiPlxuICAgICAgICAgICAgPGxpIHJvbGU9XCJ0cmVlaXRlbVwiPuyVhOydtO2FnDEt7ISc67iMMTwvbGk+XG4gICAgICAgICAgICA8bGkgcm9sZT1cInRyZWVpdGVtXCI+7JWE7J207YWcMS3shJzruIwyPC9saT5cbiAgICAgICAgPC91bD5cbiAgICA8L2xpPlxuICAgIDxsaSByb2xlPVwidHJlZWl0ZW1cIj4uLi48L2xpPlxuICAgIDxsaSByb2xlPVwidHJlZWl0ZW1cIj4uLi48L2xpPlxuPC91bD5gLFxuICBcImV4LXRhYlwiOiBgPHVsIHJvbGU9XCJ0YWJsaXN0XCIgYXJpYS1vcmllbnRhdGlvbj1cImhvcml6b250YWxcIj5cbiAgICA8bGkgcm9sZT1cInRhYlwiIHRhYmluZGV4PVwiMFwiIGFyaWEtc2VsZWN0ZWQ9XCJ0cnVlXCIgYXJpYS1jb250cm9scz1cInRhYnBhbmVsLTFcIj4x7Y6Y7J207KeAPC9saT5cbiAgICA8bGkgcm9sZT1cInRhYlwiIGFyaWEtY29udHJvbHM9XCJ0YWJwYW5lbC0yXCI+Li4uPC9saT5cbiAgICA8bGkgcm9sZT1cInRhYlwiICBhcmlhLWNvbnRyb2xzPVwidGFicGFuZWwtM1wiPi4uLjwvbGk+XG48L3VsPlxuPGRpdiBpZD1cInRhYnBhbmVsLTFcIiB0YWJpbmRleD1cIjBcIj4uLi48L2Rpdj5cbjxkaXYgaWQ9XCJ0YWJwYW5lbC0yXCIgdGFiaW5kZXg9XCIwXCI+Li4uPC9kaXY+XG48ZGl2IGlkPVwidGFicGFuZWwtM1wiIHRhYmluZGV4PVwiMFwiPi4uLjwvZGl2PlxuYFxufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/contents/cnt_codes.js\n");

/***/ }),

/***/ "./src/contents/cnt_commons.js":
/*!*************************************!*\
  !*** ./src/contents/cnt_commons.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"about_custom\": () => (/* binding */ about_custom),\n/* harmony export */   \"home\": () => (/* binding */ home)\n/* harmony export */ });\nconst notice = `\n    <details open>\n        <summary>NVDA 사용 시 사이드바 트리뷰 호환성 이슈<span class=\"symbol\" aria-hidden=\"true\"></span></summary>\n        <div>\n            <div><strong>DATE:</strong> 2022-04-13</div>\n            <p>NVDA 사용 시 페이지 사이드바 영역의 메뉴 트리뷰를 가상커서(Browse Mode)로 탐색할 수 없는 문제가 있습니다.\n            이 사이트의 많은 요소는 표준 Web Components API를 통해 만들어졌으며, 그 중, Shadow DOM 기술과 NVDA의 브라우즈 모드에서 문제가 발생하는 것을 확인하였습니다.</p>\n            <p>NVDA 스크린리더 github 소스 저장소에도 이와 관련된 이슈가 2021년 11월자로 리포트돼 있으나, 아직 해결되지 않은 상태입니다. 다음과 같은 상황에 문제가 있으므로 참고 바랍니다.</p>\n            <ul class=\"marked-ul\">\n                <li>Tab 키로 트리뷰 접근 시에 트리뷰가 잘 탐색되지만, NVDA의 가상커서인 브라우즈 모드(Browse Mode)를 통해 탐색 시 트리뷰가 정상적으로 탐색되지 않습니다.</li>\n                <li>Tab 키로 트리뷰를 벗어나 본문 영역에 접근했을 때, 첫번째 트리뷰 페이지를 제외한 나머지 페이지에서 가상커서가 해제되지 않는 문제가 있습니다.</li>\n            </ul>\n        </div>\n    </details>\n`;\nconst news = `\n    <details open>\n        <summary>리뉴얼된 Solutions, 엔비전스 웹접근성 도서관 페이지에 오신 것을 환영합니다<span class=\"symbol\" aria-hidden=\"true\"></span></summary>\n        <div>\n            <div><strong>DATE:</strong> 2022-04-13</div>\n            <p>\n                엔비전스 웹접근성 도서관은 기존의 <a href=\"https://a11y-nvisions.github.io/Solutions/WEB/example.accordionButton/index.html\">Solutions WEB</a> 페이지를 대신할 새로운 공간입니다.\n                개설 날짜인 2022년 4월 13일 기준으로 기존의 사이트보다 예제가 적지만, 기존 웹사이트에 있던 예제를 새로 다시 제작하여 다시 선보일 예정입니다. 엔비전스 웹접근성 도서관은 기존의 사이트와 달리 하나의 사이트 파일로만 운영될 예정입니다.\n            </p>\n        </div>\n    </details>\n`;\nconst home = `\n<section>\n    <h3>안내사항</h3>\n    <div>${notice}</div>\n</section>\n<section>\n    <h3>새 소식</h3>\n    ${news}\n</section>\n`;\nconst about_custom = `\n<section>\n    <h2>커스텀 요소</h2>\n    <p>커스텀 요소는 말그대로 웹 플랫폼에서 주어진 API로 웹서비스 개발자가 직접 만든 요소를 말한다.</p>\n    <p>\n    오글거리지만, 나는 커스텀 요소를 태양 또는 양날의 검이라고 표헌하고 싶다. 이 둘의 공통점은 무엇일까? 태양도 너무 가까이 있으면 사람에게 해를 끼치고, 양날의 검은 말 그대로 날이 양쪽에 있기 때문에, 나 또한 다칠 수 있다.\n    죽, 커스텀 요소는 필요한 순간에는 써야 하는 기술이지만, 매력적이면서도 매우 위험하다. 내 스스로, 내 마음대로 만든다는 것은 언뜻 보면, 굉장히 매력적이다. 그러나, 그 매혹적인 기술 안에는 매우 큰 함정이 있다.\n    </p>\n    <p>디테일한 부분을 놓치고 구현하는 경우가 너무 많아 사용자에게 불편한 UX를 제공하는 컴포넌트가 탄생한다는 큰 단점이 있다. 플랫폼별 호환성 이슈는 덤으로 따라 붙는다. 고리타분한 말이지만, 흔히 하는 말 중에 \"자유에는 책임이 따른다\"라는 말을 들어보았을 것이다.\n    딱 그 짝이다.</p>\n    <p>커스텀 요소는 분명히, 정말로 멋지고 매력적인 기술이면서도, 잘못 만들면, 가장 못나고 추한 기술이기도 하다. 이 페이지에서 커스텀 요소를 만드는 방법에 대해 참고하려는 당신, 이 부분을 반드시 명심해야만 한다.</p>\n\n    <section>\n        <h3>커스텀 요소가 멋진 이유</h3>\n        <p>커스텀 요소는 브라우저의 스타일, 디자인에 얽매이지 않고, 개발자의 역량을 표현할 수 있는 좋은 수단 중 하나이다. 커스텀 라디오 버튼이나 체크박스를 만들고, 내 페이지 테마에 맞는 일체감있는 디자인으로 통일한다면, 정말로 멋져보일 것이다.</p>\n        <p>또한, 아직 HTML5에서 구현 안 된 매력적인 네이티브 컨트롤를 구현해 볼 수도 있다. 분명히 다른 페이지와 긍정적인 차별이 이루어지는 부분일 것이다.</p>\n    </section>\n    <section>\n        <h3>커스텀 요소가 위험한 이유와 가급적 기본 요소를 써야하는 이유</h3>\n        <p>HTML의 요소는 여러 웹플랫폼 개발자의 노력으로 매우 세세하고 견고한 완전체이다. 우리는 그들이 만들어놓은 요소를 그들과 약속한 방식으로 마크업하여 손쉽게 그리고 안전하게 사용할 수 있다.</p>\n        \n        <p>\n        커스텀 요소는 이러한 견고성(안전성)을 전부 혹은 일부를 버리고, 그것을 내 스스로 구현해야 하는 매우 고된 작업이다. 쉬운 것도 있고, 어려운 것도 있으나, HTML 요소의 기본 요소만큼 안전성이 좋은 커스텀 요소를 만들려면 매우 어려울 것임은 분명하다.\n        </p>\n        \n        <p>\n        특정 요소를 구현함에 있어서 우리가 놓친 세밀한 부분이 가져올 오류나 버그는 모두 커스텀 요소를 개발하는 웹서비스 당신의 책임이며, 이로 인해 어떤 사람은 당신의 서비스를 사용하기 꺼려할 수도 있다.\n        그 어떤 사람은 정보접근에 취약한 계층일 가능성이 높으며, 커스텀 요소에서 나오는 버그나 오류 대부분은 접근상과 밀접하게 연관되어 있다.\n        </p>\n\n        <p>\n        당신이 \"내 서비스는 당신 아니여도 된다\" 라는 배짱 장사를 하는 사람이라면 모를까, 보통의 서비스 제공자라면 분명히 자신의 서비스가 최대 다수에게 공급되길 바랄 것이다. 그렇다면 커스텀 요소를 피하는 것이 가장 바람직하다.\n        그게 아니라면, 당신은 매우 세밀하게, 매우 정확하게, 견고한 커스텀 요소를 만들어야 할 것이다.\n        </p>\n\n    </section>\n    \n    <section>\n        <h3>커스텀 요소는 어떨 때 만들어야 하는가?</h3>\n        <p>커스텀 요소를 만들 때, 다음을 따져봐야 한다.</p>\n        <ul>\n            <li>- 커스텀 요소를 만들지 않고 HTML에서 대체할만한 요소가 없는가?</li>\n            <li>- 커스텀 요소로 만들었을 때, 기본 HTML 요소로 마크업하는 것보다 생산성이 높은가?</li>\n            <li>- 스타일 수정이 주 목적이라면, 커스텀 요소로 만들지 않고 스타일을 바꿀 방법이 없는가?</li>\n        </ul>\n\n        <p>이 셋 중에 두 개 이상의 사례가 겹치지 않는다면, 당신은 커스텀 요소를 만들 이유가 없다. 네이티브 HTML 요소와 CSS만으로도 충분히 비슷한 효과를 낼 수 있을지도 모른다. \n        커스텀 요소를 만들기 전에 위 세가지 사항은 반드시 따져보고 생각해 보아야 한다.</p>\n\n        <p>기본적으로 접근성을 고려하는 사람으로서, 커스텀 요소는 바람직하다고는 말할 수 없다. 커스텀 요소를 반대하는 의견에 설 수 밖에 없다. 하지만, 잘 만들어진 접근성이 좋고, UX도 훌륭한 견고한 커스텀 요소는 당신의 사이트를 분명 빛나게 할 것이다.</p>\n    </section>\n</section>\n`;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/contents/cnt_commons.js\n");

/***/ }),

/***/ "./src/contents/cnt_tab.js":
/*!*********************************!*\
  !*** ./src/contents/cnt_tab.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"about_tab\": () => (/* binding */ about_tab)\n/* harmony export */ });\nconst about_tab = `\n<section>\n    <tab-list>\n        <tab-item aria-controls=\"tpn_about_tab\">탭이란?</tab-item>\n        <tab-item aria-controls=\"tpn_tab_pattern\">탭 마크업 패턴</tab-item>\n        <tab-item aria-controls=\"tpn_tab_requirements\">탭 구성요소 유형 및 속성</tab-item>\n    </tab-list>\n    \n    <tab-panel id=\"tpn_about_tab\">\n        <h2>탭컨트롤이란?</h2>\n        <p>\n        <strong>탭 컨트롤</strong>은 라디오 버튼(<span><code class=\"language-html cl nRadio\"></code></span>)처럼 목록 안의 여러 항목 중에 하나를 선택하는 컨셉의 UI로, 일반적으로,\n        일반적인 버튼이 나열된 듯한 모습을 하고 있다. 대표적으로 Windows의 파일이나 폴더에서 컨텍스트 메뉴를 통해 열 수 있는 \"속성\" 창에서 처음 볼 수 있으며, 브라우저에서도 이 요소를 볼 수 있다.\n        </p>\n        <p>탭 컨트롤은 탭버튼을 포함하는 탭목록과 탭 페이지 내용을 담는 탭패널이 있다.</p>\n\n        <section>\n            <h3>라디오 버튼이나 목록상자로도 만들 수 있는 기능이잖아? 왜 있는 걸까?</h3>\n            <p>\n                탭컨트롤은 하나의 콘텐츠를 집중적으로 보여주는 것에 초점이 맞춰져 있는 콘텐츠 표시를 전문으로 하는 요소다.\n                컨트롤 요소이기 때문에 한 개의 탭만 선택할 수 있는 것이며, 한 개의 탭을 선택함과 동시에 다른 탭의 콘텐츠는 모두 숨겨지게 된다.\n                조금 더 의미론적인 프로그래밍, UI 설계를 위해 구분한 것이리라.\n            </p>\n        </section>\n        <section>\n            <h3>플랫폼에 따른 구조 특징</h3>\n            <p>macOS(OS X)나 Windows 등에서 먼저 추가된 이 탭 컨트롤은 탭목록, 탭 콘텐츠 순으로 설계되었다. 이것이 순서상 논리적으로 콘텐츠를 이해하기 쉽기도 하다.\n            왜 이 순서가 논리적이고 이해하기 쉬운지 이해가 안 간다고? 생각 해 보라. 만약, 문서를 읽는데, 본론이 먼져 나오고 제목이 먼저 나온다면 뭔가 이상하지 않는가?</p>\n            <p>\n                그러나 예외는 언제나 생기기 마련이다. 대표적인 사례가 iOS 네이티브 앱의 탭막대다. iOS 네이티브 앱의 탭 막대는 순서상 화면 제일 아래에 달라붙어있다.\n                아마도 이것에 대해서는 논쟁이 많이 오고 갔으리라 생각이 든다. 다만, iOS나 Android 등을 주로 터치로 사용하기 때매, 환경적 특성으로 받아들여지는 듯 하다.\n            </p>\n        </sectioN>\n        <section>\n            <h3>그래서, 터치 스크린이 주 무대인 모바일에서는 화면 하단에 둬도 된다는 소리야?</h3>\n            <p>\n                그건 좀 많이 고민해 봐야 한다. 마우스 사용자는 터치 스크린을 사용하는 것과 별반 다르지 않아서 큰 문제가 없지만, 데스크탑이나 노트북을 마우스 없이 사용하는 경우도 많다. 그런 경우, 탭 컨트롤에 접근하기 위해 수 많은 콘텐츠를 탐색해야하는 문제점이 생긴다.\n            </p>\n            <p>\n                그렇다고 시각적으로 보이는 콘텐츠 순서와 키보드로 콘텐츠가 탐색되는 순서가 다른 것도 좋은 생각은 아니다. 초점도 당연히 화면 순서랑 동일하게 이동할 거라고 생각하기 때문이다.\n            </p>\n            <p>\n                서론이 길다는 말이 여기까지 들릴 것 같으니 단도직입적으로 결론을 내리겠다. <strong>웹에서 만큼은 탭 컨트롤을 아래에 두는 행위를 하지 않는 것이</strong> 옳다.\n            </p>\n            <aside style=\"font-style:italic\">\n            <p>\n            P.S. 그럼 Apple은 iPhone이나 iPad를 키보드로 쓰는 사용자를 무시하는거냐고 물을 수도 있을 것 같으니 한마디만 더 덧붙인다. 웹에서 아래에다 탭컨트롤을 두는 행위를 하지 말라는 이유는\n            웹 환경이 많이 표준화되었으나, 아직도 통합되지 않은 부분이 많아서 여러 디바이스에게 동일한 UX를 주는 것은 매우 힘든 일이다. Apple이나 Google은 독자적인 OS 플랫폼 생태계를 만들었고, 네이티브 API를 활용한다는 가정 하에서는 키보드 접근성을 보장한다.\n            그러나, 웹으로는 플랫폼에 있는 그 API들을 온전히 끌어올 방법이 아직까지는 없다.\n            </p>\n            </aside>\n        </section>\n    </tab-panel>\n\n    <tab-panel id=\"tpn_tab_pattern\">\n        <section>\n            <h2>요구사항: 탭 컨트롤 마크업 패턴</h2>\n            <p>앞서 설명했지만, 탭컨트롤은 총 3가지의 요소유형을 사용하고, 레이아웃은 탭 목록과 탭패널 영역, 두 개로 구조를 나눌 수 있다. 탭목록은 <span><code class=\"cl tag_div language-html\"></code></span>, <span><code class=\"cl tag_ul language-html\"></code></span>, <span><code class=\"cl tag_ol language-html\"></code></span>와 같은 컨테이너에 적용하여 텝목록 컨테이너를 정의할 수 있다.\n            탭 목록에 들어갈 탭은 <span><code class=\"cl tag_li language-html\"></code></span>나 <span><code class=\"cl tag_button language-html\"></code></span>등에 정의할 수 있다.\n            선택된 탭에는 반드시 <span><code class=\"cl aSelected language-html\"></code></span>를 true로, 선택 안된 탭에는 <span><code class=\"cl aSelected language-html\"></code></span>를 false로 상태정보를 설정한다.\n            </p>\n            <p>탭 항목 요소는 반드시 <span><code class=\"cl rTablist language-html\"></code></span> 컨테아너랑 DOM 구조상 직계 구조여야 하며, 그렇지 않고 특정 태그에 감싸져있다면 감싼 태그에 <span><code class=\"cl attr_rNone language-html\"></code></span>을 명시하여 접근성 트리 상에서 감싸고 있는 요소가 없는 것처럼 해야 한다.</p>\n            <pre><code class=\"cl ex-tab language-html\"></code></pre>\n        </section>\n    </tab-panel>\n    <tab-panel id=\"tpn_tab_requirements\">\n        <section>\n            <h1>탭 컨트롤의 요구 요소유형 및 속성</h1>\n            <p>역시나 탭 마크업 패턴에서 제시한 마크업 구조에 모두 녹아있는 내용이지만, 조금 더 자세히 설명한다.</p>\n        \n            <dl>\n                <dt>\n                    <span><code class=\"language-html cl attr_aLabel\"></code></span> 또는\n                <span><code class=\"language-html cl attr_aLabelledby\"></code></span>\n                </dt>\n                <dd class=\"col2\">\n                    <p>\n                        <strong>적용대상:</strong>\n                    </p>\n                    <ul>\n                        <li><span><code class=\"language-html cl rTablist\"></code></span>(필수)</li>\n                        <li><span><code class=\"language-html cl rTabpanel\"></code></span>(필수)</li>\n                        <li><span><code class=\"language-html cl rTab\"></code></span>(선택)</li>\n                    </ul>\n                </dd>\n                <dd class=\"col2\">\n                    <p><strong>설명:</strong></p>\n                    <div>\n                        탭목록, 탭항목, 탭패널에 사용자가 식별할 수 있는 이름을 부여할 때 사용한다. 스크린리더 사용자에게 해당 텍스트로 탭 목록이나 탭 패널등의 이름이 안내된다. 선택적으로 tab에도 적용 가능하다.\n                    </div>\n                </dd>\n            \n            </dl>\n            <dl>\n                <dt>\n                    <div><span><code class=\"language-html cl attr_rTablist\"></code></span></div>\n                </dt>\n                <dd class=\"col2\">\n                    <p><strong>적용 대상:</strong></p>\n                    <div>탭 목록 컨테이너로 만들 <span><code class=\"language-html cl tag_ul\"></code></span>이나 <span><code class=\"language-html cl tag_div\"></code></span>, 또는 커스텀 요소</div>\n                </dd>\n                <dd class=\"col2\">\n                    <p><strong>설명:</strong></p>\n                    <div>AT 유저(스크린리더)로부터 해당 태그 영역이 탭목록 영역으로 인식되도록 한다.</div>\n                </dd>\n            </dl>\n            <dl>\n                <dt>\n                    <span><code class=\"language-html cl attr_rTab\"></code></span>\n                </dt>\n                <dd class=\"col2\">\n                    <p><strong>적용대상:</strong></p>\n                    <div>\n                        탭으로 만들 <span><code class=\"language-html cl tag_ll\"></code></span>이나 <span><code class=\"language-html cl tag_div\"></code></span>, <span><code class=\"language-html cl tag_button\"></code></span> <span><code class=\"language-html cl tag_anchor\"></code></span>, 또는 커스텀 요소\n                    </div>\n                </dd>\n                \n                <dd class=\"col2\">\n                    <p><strong>설명:</strong></p\n                    <div>\n                        AT 유저(스크린리더)로부터 해당 태그를 탭으로 인식되도록 한다.\n                    </div>\n                </dd>\n            </dl>\n            <dl>\n                <dt><span><code class=\"language-html cl attr_rTabpanel\"></code></span></dt>\n                <dd class=\"col2\">\n                    <p><strong>적용대상:</strong></p>\n                    <div>\n                        탭 콘텐츠를 표시할 패널 또는 페이지로 만들 <span><code class=\"language-html cl tag_div\"></code></span> 또는 커스텀 요소\n                    </div>\n                </dd>\n                <dd class=\"col2\">\n                    <p><strong>설명:</strong></p>\n                    <div>\n                        AT 유저(스크린리더)로부터 해당 태그를 탭 페이지로 인식되도록 한다.\n                    </div>\n                </dd>\n            </dl>\n            <dl>\n                <dt>\n                    <span><code class=\"language-html cl attr_tabidx_0\"></code></span>\n                </dt>\n                <dd class=\"col2\">\n                    <p><strong>적용대상:</strong></p>\n                    <div><span><code class=\"language-html cl rTab\"></code></span></div>\n                </dd>\n                <dd class=\"col2\">\n                    <p><strong>설명:</strong></p>\n                    <div>\n                        <p>처음 탭에 접근했을 때, 특별한 경우가 아니라면 첫번째 탭이 선택된 상태로 초점이 가도록 <span><code class=\"language-html cl attr_tabidx_0\"></code></span>을 설정해야 한다.\n                        선택되지 않은 탭에는 초점이 가서는 안 된다.</p>\n                    </div>\n                </dd>\n            </dl>\n            <dl>\n                <dt>\n                    <span><code class=\"language-html cl attr_aSelected\"></code></span>\n                </dt>\n                <dd class=\"col2\">\n                    <p><strong>적용대상:</strong></p>\n                    <div><span><code class=\"language-html cl rTab\"></code></span></div>\n                </dd>\n                <dd class=\"col2\">\n                    <p><strong>설명:</strong></p>\n                    <div>\n                        <p>선택된 탭에는 true, 선택 안 된 탭에는 false로 설정한다.</p>\n                    </div>\n                </dd>\n            </dl>\n            <dl>\n                <dt>\n                    <span><code class=\"language-html cl attr_aOrientation\"></code></span>\n                </dt>\n                <dd class=\"col2\">\n                    <p><strong>적용대상:</strong></p>\n                    <div><span><code class=\"language-html cl rTablist\"></code></span></div>\n                </dd>\n                <dd class=\"col2\">\n                    <p><strong>설명:</strong></p>\n                    <div>\n                        <p>선택된 탭이 가로로 나열돼 있는지, 세로로 나열돼 있는지 명시한다. 이 속성은 필수는 아니며, 모든 탭은 기본적으로 가로 방향을 전제로 하기에, 이 가로로 배치하는 경우는 굳이 명시할 필요 없다.</p>\n                    </div>\n                </dd>\n            </dl>\n        </section>\n    </tab-panel>\n</section>\n`;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/contents/cnt_tab.js\n");

/***/ }),

/***/ "./src/contents/cnt_treeview.js":
/*!**************************************!*\
  !*** ./src/contents/cnt_treeview.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"treeview_about\": () => (/* binding */ treeview_about),\n/* harmony export */   \"treeview_example\": () => (/* binding */ treeview_example),\n/* harmony export */   \"treeview_pattern\": () => (/* binding */ treeview_pattern),\n/* harmony export */   \"treeview_requirements\": () => (/* binding */ treeview_requirements)\n/* harmony export */ });\nconst treeview_about = `<section>\n<h1>트리뷰란?</h1>\n<p>\n    트리뷰(Treeview)는 목록형 상호작용 요소로 나무가 가지를 치듯 큰 분류에서 작은 분류로 뻗어나가는 형태의 선택가능한 항목을 말한다. 일반적으로 파일 탐색기 왼편을 모두 차지하고 있으며, 선택하면 오른쪽에 있는 항목보기 목록 패널의 내용물이 변경되는 것을 볼 수 있다.\n</p>\n<p>\n    재미있을 거라고는 생각하지 않지만, 왜 나무 주제에 아래로 뻗어나가는 콘텐츠에 트리뷰라는 이름을 붙였는지 모르겠다. 만든 사람 말고는 모를 것이다. 그냥 하나의 굵은 줄기에서 가지로 뻗어나가서 붙인 이름인 것 같다.\n</p>\n<p>\n    단순히 겉모양만 보면 마우스 오른쪽 버튼을 클릭하거나, 키보드의 메뉴 팝업 키를 눌렀을 때 나오는 컨텍스트 메뉴와 조작감이 별반 다르지 않다. \n    하지만, 목록에 접근하는 데에 이 둘은 꽤 큰 차이가 있다.\n</p>\n</section>\n<section>\n<h2>메뉴랑 어떤 차이가 있는데?</h2>\n<section>\n    <h3>조작 설계의 차이</h3>\n    <p>\n        우선, 조작에 차이가 있다. 메뉴나 트리뷰나 큰 분류에서 작은 분류로 뻗어나가는 형태인 것은 동일하다. 심지어 일반적인 조작 방법도 거의 유사하다. 가장 큰 차이점은 <strong>자유로운 목록 계층간 탐색</strong>이다. \n        마우스만 사용하는 경우에는 크게 와닿지 않지만, 키보드를 사용할 때, 트리뷰는 하위 목록을 확장하여 탐색하다가도 하위항목을 축소하지 않고도 상위 항목으로 이동할 수 있다. 또한 여러 하위 항목을 한꺼번에 열어둘 수 있다.\n    </p>\n\n    <p>\n        반면에 메뉴 요소는 마우스로 상위항목에 접근은 가능하지만, 한 번에 한 하위 메뉴만을 펼쳐서 볼 수 있다.\n        이해가 잘 안간다면, 당장, 바탕화면에서 마우스 오른쪽 버튼을 클릭하고, 보기 항목과 정렬 기준 항목에 마우스를 번갈아가며 올려보면, 열려있던 하위 메뉴가 사라지고, 다른 하위메뉴가 열리는 것을 볼 수 있다.\n        \n        그리고 일반적으로 키보드 사용자는 하위 메뉴를 탐색 도중에 상위항목을 탐색할 수 없다.\n    </p>\n</section>\n<section>\n    <h3>용도의 차이</h3>\n    <p>\n        메뉴는 일반적으로 여러 기능을 모아놓는 용도로 사용한다. 도움말 페이지를 뛰으는 메뉴 항목, 설정 대화상자를 띄우는 메뉴 항목 등, 기능 실행에 중점을 두고 만들어졌다.\n        반면에 트리뷰는 기능 실행의 용도로도 쓸 수도 있지만. 기본적인 기능은 콘텐츠를 요약한 제목을 목록에 담고, 해당 항목을 활성화하면 해당 항목에 대한 콘텐츠를 보여주는 것에 있다.\n        즉, 목차 형태로 콘텐츠를 요약하고, 선택하여 해당 콘텐츠를 볼 수 있게 하는 용도로 설계되었다.\n    </p>\n</section>\n<nav class=\"treeview-page-nav\" slot=\"nav\">\n    <a href=\"#treeview-req1\">다음 내용으로</a>\n</nav>\n</section>\n`;\nconst treeview_pattern = `   \n<section>\n    <h1>트리뷰 마크업 패턴</h1>\n    <p>\n        일반적으로 트리뷰를 구현할 때 중첩된 목록과 비슷하게 마크업한다. <span><code class=\"language-markup cl rTree\"></code></span> 요소 안에 <span><code class=\"language-markup cl rTreeItem\"></code></span>을 배치하고,\n        treeitem 요소 안에 <span><code class=\"language-markup cl rGroup\"></code></span>으로 묶어 하위 treeitem을 정의할 수 있다.\n    </p>\n    <p>이것을 마크업한 코드는 다음과 같다.</p>\n    <pre><code class=\"language-markup cl ex-Treeview\"></code></pre>\n</section>\n<nav class=\"treeview-page-nav\">\n<a href=\"#treeview-intro\">이전 내용으로</a>\n<a href=\"#treeview-req2\">다음 내용으로</a>\n</nav>\n`;\nconst treeview_requirements = `\n<section>\n        <h1>트리뷰의 요구 요소유형 및 속성</h1>\n        <p>앞서 <a href=\"#treeview-req1\">트리뷰 마크업 패턴</a>에서 제시한 마크업 구조에 모두 녹아있는 내용이지만, 조금 더 자세히 설명한다.</p>\n            <dl>\n                <dt>\n                    <span><code class=\"language-html cl attr_aLabel\"></code></span> 또는\n                <span><code class=\"language-html cl attr_aLabelledby\"></code></span>\n                </dt>\n                <dd class=\"col2\">\n                    <p>\n                        <strong>적용대상:</strong>\n                    </p>\n                    <ul>\n                        <li><span><code class=\"language-html cl rTree\"></code></span>(필수)</li>\n                        <li><span><code class=\"language-html cl rGroup\"></code></span>(필수)</li>\n                        <li><span><code class=\"language-html cl rTreeItem\"></code></span>(선택)</li>\n                    </ul>\n                </dd>\n                <dd class=\"col2\">\n                    <p><strong>설명:</strong></p>\n                    <div>\n                        그룹, 트리뷰에 사용자가 식별할 수 있는 이름을 부여할 때 사용한다. 스크린리더 사용자에게 해당 텍스트로 트리뷰 또는 그룹 이름이 안내된다. 선택적으로 treeitem에도 적용 가능하다.\n                    </div>\n                </dd>\n            \n            </dl>\n            <dl>\n                <dt>\n                    <div><span><code class=\"language-html cl attr_rTree\"></code></span></div>\n                </dt>\n                <dd class=\"col2\">\n                    <p><strong>적용 대상:</strong></p>\n                    <div>트리 목록 컨테이너로 만들 <span><code class=\"language-html cl tag_ul\"></code></span>이나 <span><code class=\"language-html cl tag_div\"></code></span>, 또는 커스텀 요소</div>\n                </dd>\n                <dd class=\"col2\">\n                    <p><strong>설명:</strong></p>\n                    <div>AT 유저(스크린리더)로부터 해당 태그 영역이 트리 영역으로 인식되도록 한다.</div>\n                </dd>\n            </dl>\n            <dl>\n                <dt>\n                    <span><code class=\"language-html cl attr_rTreeItem\"></code></span>\n                </dt>\n                <dd class=\"col2\">\n                    <p><strong>적용대상:</strong></p>\n                    <div>\n                        트리 항목으로 만들 <span><code class=\"language-html cl tag_ll\"></code></span>이나 <span><code class=\"language-html cl tag_div\"></code></span>, 또는 커스텀 요소\n                    </div>\n                </dd>\n                \n                <dd class=\"col2\">\n                    <p><strong>설명:</strong></p>\n                    <div>\n                        AT 유저(스크린리더)로부터 해당 태그를 트리 항목으로 인식되도록 한다.\n                    </div>\n                </dd>\n            </dl>\n            <dl>\n                <dt><span><code class=\"language-html cl attr_rGroup\"></code></span></dt>\n                <dd class=\"col2\">\n                    <p><strong>적용대상:</strong></p>\n                    <div>\n                        트리항목의 하위 트리로 만들 <span><code class=\"language-html cl tag_ul\"></code></span>이나 <span><code class=\"language-html cl tag_div\"></code></span>, 또는 커스텀 요소\n                    </div>\n                </dd>\n                <dd class=\"col2\">\n                    <p><strong>설명:</strong></p>\n                    <div>\n                        AT 유저(스크린리더)로부터 해당 태그를 하위 트리 그룹로 인식되도록 한다.\n                    </div>\n                </dd>\n            </dl>\n            <dl>\n                <dt>\n                    <span><code class=\"language-html cl attr_tabidx_0\"></code></span>\n                </dt>\n                <dd class=\"col2\">\n                    <p><strong>적용대상:</strong></p>\n                    <div><span><code class=\"language-html cl rTreeItem\"></code></span></div>\n                </dd>\n                <dd class=\"col2\">\n                    <p><strong>설명:</strong></p>\n                    <div>\n                        <p>처음 트리뷰에 접근했을 때, 특별한 경우가 아니라면 첫번째 트리 항목에 초점이 가도록 <span><code class=\"language-html cl attr_tabidx_0\"></code></span>을 설정해야 한다.</p>\n                        <p>이후에는 AT 유저(스크린리더)가 마지막으로 탐색한 트리 항목으로 초점을 보낼 수 있도록 한다.</p>\n                    </div>\n                </dd>\n            </dl>\n        <nav class=\"treeview-page-nav\">\n            <a href=\"#treeview-req1\">이전 내용으로</a>\n        </nav>\n    </section>\n`;\nconst treeview_example = `\n<section>\n<h2>트리뷰 동작 구현</h2>\n\n<p>트리뷰는 반드시 다음과 같은 방법으로 모두 조작할 수 있어야 한다.</p>\n<dl>\n    <dt>탐색</dt>\n    <dd>\n    <strong>보이는 모든 계층의 항목을 키보드로 탐색할 수 있어야 한다.</strong>\n    <p>트리뷰 항목에는 Tab키를 통해 접근이 가능해야 한다. 단, 한 개의 트리뷰 아이템에만 초점을 제공해야 하며, 마지막으로 탐색한 초점의 위치를 기억하여 다시 트리뷰에 접근했을 때 이어서 탐색할 수 있도록 한다.</p>\n    <p>\n        트리뷰는 \"아래 화살표 키\"로 다음 항목, \"위 화살표 키\"로 이전 항목을 탐색할 수 있어야 한다. 트리뷰는 보이는 모든 항목을 위 또는 아래 화살표키로 탐색할 수 있어야 하며, Home키로 보이는 첫 항목, \n        End키로 보이는 마지막 항목으로 이동할 수 있어야 한다.\n    </p>\n    </dd>\n    <dt>하위항목 표시/숨기기</dt>\n    <dd>\n        <p><strong>하위 항목은 키보드로 숨기고 펼칠 수 있어야 한다.</strong></p>\n        <p>하위 항목이 닫혀있는 트리뷰는 오른쪽 화살표 키를 통해 표시할 수 있어야 하며, 확장된 상태로 오른쪽 화살표 키를 한 번 더 누르면 첫번째 하위항목으로 초점이 이동되어야 한다. 반대로 항목이 열려있다면 왼쪽 화살표 키로 닫을 수 있어야 한다. 또, 현재 탐색중인 항목이 하위 트리뷰라면, 왼족 화살표키를 눌러 상위 항목으로 바로 빠져나올 수 있어야 한다.d</p>\n        <p>마우스 조작의 경우, 트리뷰 화살표 표시를 눌러 확장하거나,트리뷰 제목텍스트 부분을 제외한 트리뷰 항목의 아무데나 더블클릭하여 확장할 수 있도록 할 수 있으며, 한번 눌러 확장하게 하는 것도 그리 문제가 되지는 않는다.</p>\n    </dd>\n    <dt>항목 활성화 및 기능 제공</dt>\n    <dd>\n        <p>\n        키보드의 Enter 키를 반드시 click 이벤트가 dispatch되도록 <strong>반드시</strong> 바인딩해야 한다.\n        삭제 가능한 트리뷰라면 Delete로 삭제가 가능해야 하며, 이름을 바꿀 수 있다면 Ctrl+F2와 같은 단축키로 이름 바꾸기 모드로 바로 전환할 수 있는 단축키를 제공할 수 있다. 이름바꾸기 단축키의 경우, 트리뷰를 사용하는 것이 웹페이지가 아니라 웹 애플리케이션이라면, 그냥 F2키로 해도 무방하다.\n        </p>\n        <p>마우스의 경우, 트리뷰를 클릭하면 선택되어야 하며, 키보드 탐색과 연계될 수 있게 해당 트리 항목에 초점이 이동되어야 한다.</p>\n    </dd>\n</dl>\n\n</section>\n    <h3>적용된 예제</h3>\n    <treeview-list treeview-mode=\"panel-mode\">\n        <treeview-item id=\"it_ex_item_A\" panel-ref=\"pn_ex_item_A\">A Item</treeview-item>\n        <treeview-item id=\"it_ex_item_B\" panel-ref=\"pn_ex_item_B\">B Item</treeview-item>\n        <treeview-item id=\"it_ex_item_C\" panel-ref=\"pn_ex_item_C\">C Item</treeview-item>\n    </treeview-list>\n    <treeview-panel id=\"pn_ex_item_A\">\n        <h1>You Activated an A Panel!</h1>\n    </treeview-panel>\n    <treeview-panel id=\"pn_ex_item_B\">\n        <h1>You Activated a B Panel!</h1>\n    </treeview-panel>\n    <treeview-panel id=\"pn_ex_item_C\">\n        <h1>You Activated a C Panel!</h1>\n    </treeview-panel>\n<section>\n</section>\n`;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/contents/cnt_treeview.js\n");

/***/ }),

/***/ "./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _treeview__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./treeview */ \"./src/treeview.js\");\n/* harmony import */ var _tab__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tab */ \"./src/tab.js\");\n/* harmony import */ var _contents_cm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./contents/cm */ \"./src/contents/cm.js\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbWFpbi5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3RyZWV2aWV3LWNvbXBvbmVudC8uL3NyYy9tYWluLmpzP2RjN2EiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICcuL3RyZWV2aWV3JztcbmltcG9ydCBcIi4vdGFiXCI7XG5pbXBvcnQgJy4vY29udGVudHMvY20nOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/main.js\n");

/***/ }),

/***/ "./src/tab.js":
/*!********************!*\
  !*** ./src/tab.js ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((() => {\n  // 탭목록 컨테이너\n  class TablistElement extends HTMLElement {\n    constructor() {\n      super();\n      this.index = [...document.querySelectorAll('tab-list')].indexOf(this);\n      this.id = \"tab-list_\" + (this.index + 1);\n      this.attachShadow({\n        mode: \"open\"\n      });\n      const shadow = this.shadowRoot;\n      const template = document.createElement('template');\n      template.innerHTML = `\n            <style>\n            /*유연한 탭버튼이 나오도록 flex 디스플레이 사용*/\n            :host {\n                display:flex;\n                overflow:hidden;\n                border:solid 1px;\n            }\n    \n            :host, *{\n                box-sizing:border-box;\n                margin:0; padding: 0;\n            }\n    \n            :host([orientation=\"horizontal\"]) {\n                border-bottom:solid 0.01em;\n            }\n            \n            :host([orientation=\"vertical\"]) {\n                flex-flow:column;\n                margin-right:1em;\n                height:100%;\n                border-right:solid 0.01em;\n            }\n            </style>\n            <!--추후에 만들 tab-item 컴포넌트가 담길 slot-->\n            <slot name=\"tab-buttons\"></slot>\n            `; //초기화 및 세팅\n\n      this.setAttribute('role', \"tablist\");\n      shadow.append(template.content.cloneNode(true));\n      this.activationMode = this.activationMode;\n      this.orientation = this.orientation;\n    } // 탭의 동작 설정 \n\n\n    get activationMode() {\n      return this.getAttribute('activation-mode');\n    }\n\n    set activationMode(str) {\n      const value = String(str);\n      this.setAttribute('activation-mode', value === \"manual\" || value === \"auto\" ? value : \"auto\");\n    } //탭의 방향 가져오기/설정\n\n\n    get orientation() {\n      return this.getAttribute('orientation');\n    }\n\n    set orientation(str) {\n      const value = String(str);\n      this.setAttribute('orientation', value === \"horizontal\" || value === \"vertical\" ? value : \"horizontal\");\n    } //선택 여부와 관계없이 모든 자식 tab-item 가져오기\n\n\n    get allTabs() {\n      return [...this.querySelectorAll(\"tab-item\")];\n    } // 선택할 수 있는 탭만 가져오기\n\n\n    get tabs() {\n      return [...this.querySelectorAll(\"tab-item:not([disabled])\")];\n    } // 선택할 수 있는 자식 tab-item의 개수 가져오기\n\n\n    get tab_count() {\n      return this.tabs.length;\n    } // 선택된 탭 가져오기\n\n\n    get selectedTab() {\n      return this.querySelector(\"tab-item[selected]\");\n    } // 선택된 탭의 순서 가져오기\n\n\n    get selectedIndex() {\n      return this.tabs.findIndex(el => el.selected);\n    }\n\n    static get observedAttributes() {\n      return [\"orientation\"];\n    }\n\n    connectedCallback() {\n      //tab-list가 문서에 연결되면\n      customElements.whenDefined(\"tab-item\").then(_ => {\n        // tab-item이 정의되었을 때 tab-item들을 초기화/기본설정으로 만듬\n        this.allTabs.forEach(_ => _.slot = \"tab-buttons\");\n        this.allTabs.forEach((el, idx) => {\n          // 모든 탭의 기본 속성값 추가\n          el.setAttribute('aria-disabled', el.disabled);\n          el.setAttribute('aria-selected', el.selected);\n          el.setAttribute('tabindex', el.selected ? \"0\" : \"-1\");\n        });\n\n        if (!this.selectedTab) {\n          // 선택된 탭이 없으면\n          this.tabs[0].click();\n        }\n\n        if (this.selectedTab && this.selectedTab.disabled) {\n          // 선택된 탭이 있으나 disabled인 경우(마크업 안전장치)\n          this.tabs[0].click();\n        }\n\n        if (this.selectedTab) {\n          // 있는 경우, 해당 탭이 disabled가 아니면 해당 탭이 활성화된 상태로 로드\n          this.selectedTab.click();\n        }\n      });\n    }\n\n    attributeChangedCallback(name, oldVal, newVal) {\n      if (name === \"orientation\" && newVal) {\n        // orientation 속성 변경 감지 및 aria-orientation 변경\n        this.setAttribute('aria-orientation', newVal);\n      }\n    }\n\n  }\n\n  class TabElement extends HTMLElement {\n    // tab-item 컴포넌트\n    constructor() {\n      super();\n      this.attachShadow({\n        mode: \"open\"\n      });\n      const shadow = this.shadowRoot;\n      const template = document.createElement('template');\n      template.innerHTML = `\n                <style>\n    \n                * {\n                    margin:0; padding:0; box-sizing:border-box;\n                }\n    \n                #text {\n                    padding:0.25em;\n                }\n    \n                :host-context(tab-list) {\n                    display:flex;\n                    position:relative;\n                    width:auto; height:fit-content;\n                    border-style:solid;\n                }\n    \n    \n                :host-context(tab-list[orientation=\"horizontal\"]):host {\n                    flex-flow:column;\n                    border-color:transparent currentColor;\n                    border-width:0 0.01em 0 0;\n                }\n                :host-context(tab-list[orientation=\"vertical\"]):host {\n                    flex-flow:row;\n                    border-width:0 0 0.01em 0;\n                    border-color:currentColor transparent;\n                }\n    \n                \n                /*선택된 탭의 스타일*/\n                :host-context(tab-list[orientation=\"vertical\"]):before {\n                    content:\"\";\n                    background-color:transparent;\n                    width:0.8em; min-height:100%;\n                    margin-right:0.25em;\n                }\n                :host-context(tab-list[orientation=\"vertical\"]):host([selected]):before {\n                    background-color:currentColor;\n                }\n                :host-context(tab-list[orientation=\"horizontal\"]):after {\n                    content:\"\";\n                    width:100%; height:0.25em;\n                    background-color:transparent;\n                }\n                \n                :host-context(tab-list[orientation=\"horizontal\"]):host([selected]):after {\n                    background-color:currentColor;\n                }\n\n                /*disabled 상태*/\n                :host([disabled]) {\n                    opacity:0.6;\n                    pointer-events:none;\n                }\n    \n    \n                /*마지막 아이템에 그림자 추가*/\n                \n                :host-context(tab-list[orientation=\"vertical\"]):host(:last-child) {\n                    box-shadow: 0 0.3em 0.4em 0.01em rgba(0,0,0, 0.5);\n                }\n                :host-context(tab-list[orientation=\"horizontal\"]):host(:last-child) {\n                    box-shadow: 0.3em 0 0.4em 0.01em rgba(0,0,0, 0.5);\n                }\n                </style>\n    \n                <span id=\"text\" role=\"none\">\n                    <slot></slot>\n                </span>\n                `;\n      this.setAttribute('role', 'tab');\n      this.index = this.parentTablist.tabs.indexOf(this);\n      this.id = this.parentTablist.id + \"_tab-button_\" + (this.index + 1); // 레이블링을 위한 아이디가 자동으로 붙습니다.\n\n      this.setAttribute('aria-labelledby', this.id);\n      shadow.appendChild(template.content.cloneNode(true));\n    }\n\n    get linkedPanel() {\n      const PANEL_ID = this.getAttribute('aria-controls');\n\n      if (PANEL_ID) {\n        const PANEL = document.querySelector('tab-panel#' + PANEL_ID);\n\n        if (PANEL) {\n          return PANEL;\n        }\n\n        return null;\n      }\n\n      return null;\n    }\n    /* [ 상태 getter/setter ] */\n\n\n    get disabled() {\n      return this.hasAttribute('disabled');\n    }\n\n    set disabled(b) {\n      this.toggleAttribute('disabled', Boolean(b));\n    }\n\n    get selected() {\n      return this.hasAttribute('selected');\n    }\n\n    set selected(b) {\n      this.toggleAttribute('selected', Boolean(b));\n    }\n\n    get parentTablist() {\n      return this.closest('tab-list');\n    }\n\n    static get observedAttributes() {\n      return ['disabled', 'selected', 'orientation'];\n    } // 현재 탭을 기준으로 선택가능한 다음 탭 형제를 가져옵니다.\n\n\n    get nextTabSibling() {\n      const nxtTab = this.parentTablist.tabs[this.index + 1];\n\n      if (!nxtTab) {\n        return this.firstTabSibling;\n      }\n\n      return nxtTab;\n    } // 현재 탭을 기준으로 선택가능한 이전 탭 형제를 가져옵니다.\n\n\n    get previousTabSibling() {\n      const prvTab = this.parentTablist.tabs[this.index - 1];\n\n      if (!prvTab) {\n        return this.lastTabSibling;\n      }\n\n      return prvTab;\n    } // 선택가능한 첫 탭 형제를 가져옵니다.\n\n\n    get firstTabSibling() {\n      return this.parentTablist.tabs[0];\n    } // 선택가능한 마지막 탭 형제을 가져옵니다.\n\n\n    get lastTabSibling() {\n      return this.parentTablist.tabs[this.parentTablist.tab_count - 1];\n    }\n\n    showPanel() {\n      // 패널이 있을 경우 표시\n      if (this.linkedPanel) {\n        this.linkedPanel.show = true;\n      }\n    }\n\n    hidePanel() {\n      // 패널이 있으면 패널을 숨깁니다.\n      if (this.linkedPanel) {\n        this.linkedPanel.show = false;\n      }\n    }\n\n    clickHandler(evt) {\n      // 클릭 이벤트 핸들러입니다\n      if (!this.disabled) {\n        // disabled가 아닌 경우에만 활성화를 가능하게 해야 합니다.\n        this.parentTablist.allTabs.forEach((element, index) => {\n          if (element !== this) {\n            // 이 탭이 아닌 탭요소를 선택해제, 패널을 숨김처리합니다.\n            element.selected = false;\n            element.hidePanel();\n          } else {\n            // 현재 탭을 선택합니다. 패널을 표시합니다.\n            this.selected = true;\n            this.showPanel();\n          }\n        });\n      }\n    }\n\n    keyboardNavigationHandler(evt) {\n      // 키보드 이벤트 핸들러입니다.\n      // isVerticalTab은 탭이 세로 탭인지 확인하는 불린 변수입니다.\n      //NXT(Next)와 PRV(Previous) 키는 위 isVerticalTab의 값에 따라 정해집니다.\n      const isVerticalTab = this.parentTablist.orientation === \"vertical\";\n      const NXT = isVerticalTab ? \"ArrowDown\" : \"ArrowRight\";\n      const PRV = isVerticalTab ? \"ArrowUp\" : \"ArrowLeft\";\n      const FST = \"Home\";\n      const LST = \"End\";\n      const CLICK1 = \" \";\n      const CLICK2 = \"Enter\";\n      const TAB = \"Tab\";\n\n      switch (evt.key) {\n        // evt.key를 통해 누른 키를 감지합니다.\n        case NXT:\n          evt.preventDefault(); // 방향키와 홈 앤드키 동작 시 문서가 스크롤되지 않도록 합니다.\n\n          if (this.parentTablist.activationMode === \"auto\") {\n            //activation-mode가 auto 일 경우에만 selected가 붙도록 click을 dispatch합니다.\n            this.nextTabSibling.click();\n          }\n\n          this.nextTabSibling.focus();\n          break;\n        //아래는 모두 비슷하게 반복.\n\n        case PRV:\n          evt.preventDefault();\n\n          if (this.parentTablist.activationMode === \"auto\") {\n            this.previousTabSibling.click();\n          }\n\n          this.previousTabSibling.focus();\n          break;\n\n        case FST:\n          evt.preventDefault();\n\n          if (this.parentTablist.activationMode === \"auto\") {\n            this.firstTabSibling.click();\n          }\n\n          this.firstTabSibling.focus();\n          break;\n\n        case LST:\n          evt.preventDefault();\n\n          if (this.parentTablist.activationMode === \"auto\") {\n            this.lastTabSibling.click();\n          }\n\n          this.lastTabSibling.focus();\n          break;\n\n        case CLICK1:\n        case CLICK2:\n          // Enter나 Space를 눌렀을 때 탭이 선택되도록 합니다. activation-mode 속성을 'manual'로 설정했을 경우 활성화할 수 있어야 하기 때문입니다.\n          this.click();\n          break;\n\n        case TAB:\n          if (!evt.shiftKey) {\n            evt.preventDefault();\n\n            if (this.parentTablist.selectedTab.linkedPanel) {\n              this.parentTablist.selectedTab.linkedPanel.focus();\n            }\n          }\n\n          break;\n      }\n    }\n\n    connectedCallback() {\n      //tab-item이 HTML 문서에 연결되면\n      //이벤트 핸들러 등록\n      this.addEventListener('click', this.clickHandler.bind(this));\n      this.addEventListener('keydown', this.keyboardNavigationHandler.bind(this)); // 패널이 있으면 panel의 id와 연결합니다.\n\n      if (this.linkedPanel) {\n        this.linkedPanel.setAttribute('aria-labelledby', this.id);\n      }\n    }\n\n    disconnectedCallback() {\n      // 문서에서 연결이 해제됐을 때\n      //이벤트 핸들러 삭제\n      this.removeEventListener('click', this.clickHandler);\n      this.removeEventListener('keydown', this.keyboardNavigationHandler);\n    }\n\n    attributeChangedCallback(name, oldVal, newVal) {\n      // 등록된 속성 변경이 감지되었을 때 실행되는 콜백\n      const isTrue = newVal === \"\";\n\n      switch (name) {\n        case \"selected\":\n          // selected 속성이 감지되면 aria-selected와 tabindex 값을 조정\n          this.setAttribute('aria-selected', isTrue);\n          this.setAttribute('tabindex', isTrue ? \"0\" : \"-1\");\n          break;\n        // disabled 속성이 감지되면 aria-disabled와 tabindex 값을 조정\n\n        case \"disabled\":\n          this.setAttribute('aria-disabled', isTrue);\n\n          if (isTrue) {\n            this.removeAttribute('tabindex');\n          }\n\n          this.setAttribute('tabindex', '0');\n          break;\n      }\n    }\n\n  }\n\n  class tabPanelElement extends HTMLElement {\n    constructor() {\n      super();\n      this.attachShadow({\n        mode: \"open\"\n      });\n      this.setAttribute('tabindex', '0');\n      this.setAttribute('role', 'tabpanel');\n      const shadow = this.shadowRoot;\n      const template = document.createElement(\"template\");\n      template.innerHTML = `\n                <style>\n                    :host(:not([show])) { /*show 속성이 없으면 나타나지 않도록 */\n                        display:none; \n                    }\n                </style>\n                <slot></slot>  <!-- 이 슬롯으로 콘텐츠가 들어옵니다.-->\n            `;\n      this.setAttribute('role', 'tabpanel');\n      shadow.appendChild(template.content.cloneNode(true));\n    }\n\n    get show() {\n      // 현재 패널이 show 상태인지 가져옵니다. 이 getter는 굳이 필요하지 않지만 형식상 넣습니다.\n      return this.hasAttribute('show');\n    }\n\n    set show(b) {\n      // show 속성을 조정하는 setter 프로퍼티,\n      const value = Boolean(b);\n      this.toggleAttribute('show', value);\n    }\n\n  }\n\n  class TabLayoutElement extends HTMLElement {\n    // 레이아웃 컨테이너\n    // orientation 속성에 따라 tablist의 orientation이 정해지고, 레이아웃이 그에 맞게 변경되는 레이아웃 컴포넌트입니다.\n    constructor() {\n      super();\n      this.attachShadow({\n        mode: \"open\"\n      });\n      const shadow = this.shadowRoot;\n      const template = document.createElement(\"template\");\n      template.innerHTML = `\n                <style>\n                *{margin:0; padding:0; box-sizing:border-box;}\n                :host {\n                    display:grid;\n                    min-width:280px;\n                    max-width:100%;\n                    min-height:300px;\n                    max-height:100%;\n                    position:relative;\n                    border:solid 0.01em currentColor;\n                    overflow:hidden;\n                    border-radius:0.5em;\n                    margin:0.5em 0;\n                }\n    \n                :host( [ orientation = \"horizontal\" ] ) {\n                    grid-template-columns: 1fr;\n                    grid-template-rows:auto 9fr;\n                }\n                :host( [ orientation = \"vertical\" ] ) {\n                    grid-template-columns:minmax(auto,10em) 9fr;\n                    grid-template-rows: 1fr;\n                }\n    \n                .panel-region{\n                    padding:1em;\n                }\n                </style>\n    \n                <div>\n                <slot name=\"tablist\"></slot>\n                </div>\n                \n                <div class=\"panel-region\">\n                    <slot name=\"panel\"> </slot>\n                </div>\n            `;\n      shadow.append(template.content.cloneNode(true));\n      this.orientation = this.orientation; // orientation 초기화\n\n      if (this.tabName) {\n        // tabName이 설정된 경우, tablist의 aria-label을 설정합니다.\n        this.tabName = this.tabName;\n      }\n    }\n\n    get orientation() {\n      return this.getAttribute('orientation');\n    }\n\n    set orientation(str) {\n      const value = String(str);\n      this.setAttribute('orientation', value === \"horizontal\" || value === \"vertical\" ? value : \"horizontal\");\n    }\n\n    set tabName(str) {\n      this.setAttribute('tab-name', String(str));\n    }\n\n    get tabName() {\n      return this.getAttribute('tab-name');\n    }\n\n    get tabList() {\n      return this.querySelector('tab-list');\n    }\n\n    get tabPanel() {\n      return this.querySelectorAll('tab-panel');\n    }\n\n    static get observedAttributes() {\n      return [\"orientation\", \"tab-name\"];\n    }\n\n    connectedCallback() {\n      Promise.all([customElements.whenDefined('tab-list'), customElements.whenDefined('tab-item'), customElements.whenDefined('tab-panel')]).then(_ => {\n        // tab-list와 tab-panel이 이곳에 정의되면\n        this.tabList.orientation = this.orientation; // 탭의 방향을 이 레이아웃의 방향에 따르도록 설정\n\n        this.tabList.slot = \"tablist\"; // tablist 슬롯에 등록\n\n        this.tabPanel.forEach(_ => _.slot = \"panel\"); // \n      });\n    }\n\n    attributeChangedCallback(name, oldVal, newVal) {\n      if (name === \"orientation\" && newVal) {\n        if (this.tabList) {\n          this.tabList.orientation = this.orientation;\n        }\n      }\n\n      if (name === \"tab-name\" && newVal && newVal !== \"\") {\n        if (this.tabList) {\n          // 탭컨트롤 명칭이 바뀌면 캡트롤 리스트이 aria-label을 갱신합니다.\n          this.tabList.setAttribute('aria-label', this.tabName);\n        }\n      }\n    }\n\n  } // 만든 요소들을 등록합니다.\n\n\n  customElements.define('tab-list', TablistElement);\n  customElements.define('tab-item', TabElement);\n  customElements.define('tab-panel', tabPanelElement);\n  customElements.define('tab-layout', TabLayoutElement);\n})());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/tab.js\n");

/***/ }),

/***/ "./src/treeview.js":
/*!*************************!*\
  !*** ./src/treeview.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mobile_detect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mobile-detect */ \"./node_modules/mobile-detect/mobile-detect.js\");\n/* harmony import */ var mobile_detect__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mobile_detect__WEBPACK_IMPORTED_MODULE_0__);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((() => {\n  const mo = new (mobile_detect__WEBPACK_IMPORTED_MODULE_0___default())(window.navigator.userAgent);\n  const CE = customElements;\n\n  class TreeviewLayoutElement extends HTMLElement {\n    constructor() {\n      super();\n      const shadow = this.attachShadow({\n        mode: \"open\"\n      });\n      const template = document.createElement('template');\n      template.innerHTML = `\n            <style>\n                :host {\n                    display:grid;\n                    grid-template-rows:1fr;\n                    grid-template-columns:minmax(30%,35%) auto;\n                    width:100%; height:100%;\n                    position:relative;\n                    overflow:hidden;\n                    flex-flow:row;\n                    box-sizing:border-box;\n                }\n                \n                :host * {\n                    box-sizing:border-box;\n                }\n\n                :host [part=\"panel\"] {\n                    width:100%; height:100%;\n                    position:relative;\n                    scrollbar-width:thin;\n                    display:grid;\n                    overflow:hidden;\n                    overflow-y:auto;\n                    grid-template-row:auto 1fr;\n                    scrollbar-color:currentColor transparent;\n                    padding:0.25em;\n                }\n\n                :host [part=\"access-key\"] {\n                    width:100%;\n                }\n\n                :host [part=\"treeview\"] {\n                    width:100%; height:100%;\n                    position:relative;\n                    overflow:hidden;\n                }\n                \n                :host([treeview-hidden]) [part=\"treeview\"]{\n                    display:none;\n                }\n\n                :host [part=\"panel\"]::-webkit-scrollbar {\n                    width:0.5em; height:0.5em;\n                    border-radius:0.25em;\n                }\n                :host [part=\"panel\"]::-webkit-scrollbar-track {\n                    background-color:transparent;\n                    border-radius:0.25em;\n                }\n                :host [part=\"panel\"]::-webkit-scrollbar-thumb {\n                    background-color:currentColor;\n                    border-radius:0.25em;\n                }\n\n                :host ::slotted(div) {\n                    height:100%;\n                    position:relative; display:grid;\n                    grid-template-rows:auto 1fr;\n                }\n                \n                :host .openTreeview {\n                    display:none;\n                }\n\n                @media screen and (max-width:768px) {\n                    :host {\n                        grid-template-rows:auto 1fr;\n                        grid-template-columns:auto 1fr;\n                    }\n                    :host([treeview-hidden]) [part=\"panel\"] {\n                        grid-column:1 / 2;\n                    }\n                    :host([treeview-hidden]) [part=\"treeview\"] {\n                    }\n                    :host button.openTreeview {\n                        width:100%;\n                    }\n\n                    :host([treeview-hidden]) div.openTreeview {\n                        backdrop-filter:blur(10px); display:flex;\n                        min-height:1em; position:relative;\n                        padding:0.4em;\n                        background-color:rgba(0,0,0,0.7);\n                    }\n\n                    :host button.openTreeview {\n                        display:inline-flex; width:fit-content;\n                        flex-flow:column;\n                        background-color:rgba(0,0,0,0.5); color:white;\n                        border:solid 0.05em rgba(255,255,255,0.3);\n                        align-items:center; justify-content:center;\n                        padding:0.2em;\n                        line-height:1em; text-align:center;\n                        border-top-right-radius:0.35em;\n                        border-bottom-right-radius:0.35em;\n                        align-self:start;\n                        justify-self:start; transition:opacity 0.2s;\n                    }\n                }\n            </style>\n            <div class=\"openTreeview\">\n                <button aria-label=\"트리뷰 열기\" class=\"openTreeview\">메뉴 열기</button>\n            </div>\n            <div part=\"treeview\">\n                <div part=\"access-key\">\n                <slot class=\"access-key\" name=\"access-key-visible\"></slot>\n                </div>\n                <slot name=\"treeview\"></slot>\n            </div>\n            <div part=\"panel\">\n                <slot name=\"panel\"></slot>\n            </div>\n        `;\n      shadow.appendChild(template.content.cloneNode(true));\n      this.treeviewPart = shadow.querySelector('[part=\"treeview\"]');\n      this.panelPart = shadow.querySelector('[part=\"panel\"]');\n      this.treeviewPart.setAttribute('role', this.isMobileScreenSize ? \"dialog\" : \"region\");\n      this.treeviewPart.setAttribute('aria-label', this.isMobileScreenSize ? \"Menu\" : \"Side Bar\");\n      this.treeviewOpener = shadow.querySelector('button.openTreeview');\n      this.treeviewOpener.setAttribute('aria-label', '트리뷰 메뉴');\n      this.treeviewOpener = shadow.querySelector('button.openTreeview');\n\n      if (this.slottedPanelContainer) {\n        this.slottedPanelContainer.setAttribute('tabindex', '0');\n      }\n    }\n\n    get slottedPanelContainer() {\n      return this.querySelector('[slot=\"panel\"]');\n    }\n\n    get ScreenSizeMedia() {\n      return matchMedia('screen and (max-width:768px)');\n    }\n\n    get isMobileScreenSize() {\n      return this.ScreenSizeMedia.matches;\n    }\n\n    get hideTreeview() {\n      if (this.isMobileScreenSize) {\n        return this.hasAttribute('treeview-hidden');\n      } else {\n        return false;\n      }\n    }\n\n    set hideTreeview(v) {\n      if (this.isMobileScreenSize) {\n        if (v) {\n          this.setAttribute('treeview-hidden', \"\");\n          this.treeviewPart.removeAttribute('aria-modal');\n        } else {\n          this.removeAttribute('treeview-hidden');\n          this.treeviewPart.setAttribute('aria-modal', 'true');\n        }\n      } else {\n        this.removeAttribute('treeview-hidden');\n      }\n    }\n\n    connectedCallback() {\n      window.addEventListener('DOMContentLoaded', evt => {\n        if (this.isMobileScreenSize) {\n          this.hideTreeview = true;\n        } else {\n          this.hideTreeview = false;\n        }\n      });\n      matchMedia('screen and (max-width:768px)').addEventListener('change', evt => {\n        if (evt.matches) {\n          this.hideTreeview = true;\n        } else {\n          this.hideTreeview = false;\n          this.treeviewPart.removeAttribute('aria-modal');\n        }\n\n        this.treeviewPart.setAttribute('role', this.isMobileScreenSize ? \"dialog\" : \"region\");\n      });\n      this.treeviewOpener.addEventListener('click', () => {\n        if (this.isMobileScreenSize) {\n          this.hideTreeview = !this.hideTreeview;\n\n          if (!this.hideTreeview) {\n            const located = document.querySelector('[located]');\n\n            if (located) {\n              located.focus();\n            }\n          }\n        }\n      });\n      this.treeviewOpener.addEventListener('keydown', evt => {\n        if (evt.key === \"Enter\" || evt.key === \" \") {\n          evt.target.click();\n        }\n      });\n      this.addEventListener('keydown', evt => {\n        if (evt.code == \"Escape\" && this.isMobileScreenSize) {\n          this.hideTreeview = true;\n          this.treeviewOpener.focus();\n        } else {\n          return false;\n        }\n\n        if (evt.code == \"Tab\" && this.isMobileScreenSize) {\n          this.hideTreeview = true;\n        } else {\n          return false;\n        }\n      });\n      window.addEventListener('keydown', evt => {\n        if (evt.key == \"F6\" && evt.ctrlKey) {\n          if (this.slottedPanelContainer) {\n            this.slottedPanelContainer.focus();\n          }\n\n          if (evt.target === this.slottedPanelContainer || this.slottedPanelContainer.contains(evt.target)) {\n            const located = document.querySelector('[located]');\n\n            if (!this.isMobileScreenSize) {\n              if (located) {\n                located.focus();\n              }\n            } else {\n              this.treeviewOpener.focus();\n            }\n          }\n        }\n      });\n    }\n\n  }\n\n  class TreeviewListElement extends HTMLElement {\n    constructor() {\n      super();\n      this.treeviewIndex = [...document.querySelectorAll('treeview-list')].indexOf(this);\n      this.id = \"treeview_docUID-no\" + (this.treeviewIndex + 1);\n      this.setAttribute('role', 'tree');\n\n      if (this.isMobileScreenSize && this.hasAttribute('nv-menu')) {\n        this.hide = true;\n      }\n\n      const shadow = this.attachShadow({\n        mode: \"open\"\n      });\n      const template = document.createElement('template');\n      template.innerHTML = `\n            <style>\n                :host {\n                    display:flex;\n                    width:100%; max-height:100%;\n                    flex-flow:column;\n                    padding:0.2em;\n                    position:relative;\n                    box-sizing:border-box;\n                    scrollbar-width:thin;\n                    overflow:hidden;\n                    overflow-y:auto;\n                    scrollbar-color:currentColor transparent;\n                }\n\n                :host::-webkit-scrollbar {\n                    width:5px;\n                    height:5px;\n                }\n        \n                :host::-webkit-scrollbar-thumb {\n                    border-radius:0.2em;\n                    background-color:currentColor;\n                    transition:all 0.1s;\n                }\n\n                :host(:focus-within)::-webkit-scrollbar-thumb {\n                    background-color:currentColor;\n                }\n\n                :host(:hover)::-webkit-scrollbar-thumb {\n                    background-color:currentColor;\n                }\n\n                :host::-webkit-scrollbar-track {\n                    background-color:transparent;\n                    border-radius:0.5em;\n                }\n\n                :host::-webkit-scrollbar-button {\n                    display:none;\n                }\n\n\n                :host .announcer,\n                :host .description {\n                    width: 1px;\n                    border: 0;\n                    clip: rect(0 0 0 0);\n                    height: 1px;\n                    margin: -1px;\n                    overflow: hidden;\n                    padding: 0;\n                    position: absolute;\n                }\n            </style>\n            <div role=\"status\" class=\"announcer\"></div>\n            <slot></slot>`;\n      shadow.appendChild(template.content.cloneNode(true));\n      this.announcer = this.shadowRoot.querySelector('.announcer');\n    }\n\n    get isSolutionsMenu() {\n      return this.hasAttribute('solution-menu');\n    }\n\n    get getParentTreeviewLayout() {\n      return this.closest('treeview-layout');\n    }\n\n    set isHashRoutingEnabled(v) {\n      const isBool = typeof v === \"boolean\";\n\n      if (isBool) {\n        this.setAttribute('hash-routing', String(v));\n      }\n    }\n\n    get isHashRoutingEnabled() {\n      return this.getAttribute('hash-routing') === \"true\" ? true : false;\n    }\n\n    announcement(text) {\n      let announcement;\n\n      if (Boolean(text) && typeof text === \"string\") {\n        this.announcer.innerHTML = \"\";\n        this.announcer.innerHTML = text;\n        announcement = setTimeout(() => {\n          clearTimeout(announcement);\n          this.announcer.innerHTML = \"\";\n        }, 150);\n      }\n    }\n\n    get item() {\n      return this.allItems.filter(_ => {\n        if (getComputedStyle(_).display !== \"none\") {\n          return _;\n        }\n      });\n    }\n\n    get treeViewMode() {\n      return this.getAttribute('treeview-mode');\n    }\n\n    set treeViewMode(v) {\n      const reg = /^(panel-mode|menu-mode)$/;\n\n      if (reg.test(String(v))) {\n        this.setAttribute('treeview-mode', String(v));\n      }\n    }\n\n    get allItems() {\n      return [...this.querySelectorAll('treeview-item')];\n    }\n\n    get item_count() {\n      return this.item.length;\n    }\n\n    get locatedElement() {\n      return this.querySelector('treeview-item[located]');\n    }\n\n    get locatedElementIndex() {\n      if (this.locatedElement) {\n        return this.item.indexOf(this.locatedElement);\n      }\n\n      return -1;\n    }\n\n    get activatedElement() {\n      return this.querySelector('treeview-item[activated]');\n    }\n\n    treeitem_init() {\n      if (this.item_count > 0) {\n        const IsNotLocatedElementExists = !Boolean(this.locatedElement);\n\n        if (IsNotLocatedElementExists) {\n          this.item[0].located = true;\n        }\n\n        this.allItems.forEach(_ => {\n          if (this.isHashRoutingEnabled && _.id === location.hash.replace(/#/, '')) {\n            _.located = true;\n            document.head.querySelector('title').innerHTML = \"엔비전스 웹접근성 도서관 - \" + _.innerText.trim();\n\n            _.parentContext.forEach(_ => {\n              _.expanded = true;\n            });\n          }\n\n          ;\n        });\n        const located = this.locatedElement;\n        this.item.forEach(_ => {\n          if (_ !== located) {\n            _.removeAttribute('tabindex');\n          } else {\n            _.setAttribute('tabindex', '0');\n          }\n        });\n\n        if (this.treeViewMode === \"panel-mode\") {\n          if (located && located.connectedPanel) {\n            located.connectedPanel.show = true;\n            located.activated = true;\n          }\n        }\n\n        CE.upgrade(this);\n      }\n    }\n\n    routerEvent(evt) {\n      const expandParents = element => {\n        let parent = element.parentElement;\n\n        while (parent && /treeview-item/i.test(parent.tagName)) {\n          parent.expanded = true;\n          parent = parent.parentElement;\n        }\n      };\n\n      if (evt.type === \"DOMContentLoaded\") {\n        if (this.isHashRoutingEnabled && this.treeviewMode === \"panel-mode\") {\n          const getIdentifiedElementByHashAddress = document.querySelector(location.hash);\n          expandParents(getIdentifiedElementByHashAddress ? getIdentifiedElementByHashAddress : this.locatedElement);\n\n          if (getIdentifiedElementByHashAddress) {\n            getIdentifiedElementByHashAddress.located = true;\n            getIdentifiedElementByHashAddress.label.click();\n            document.head.querySelector('title').innerHTML = \"엔비전스 웹접근성 도서관 - \" + getIdentifiedElementByHashAddress.innerText.trim();\n          }\n        }\n      }\n\n      if (evt.type === 'hashchange' && this.isHashRoutingEnabled) {\n        evt.preventDefault();\n        const getIdentifiedElementByHashAddress = document.querySelector(location.hash);\n        expandParents(getIdentifiedElementByHashAddress ? getIdentifiedElementByHashAddress : this.locatedElement);\n\n        if (getIdentifiedElementByHashAddress) {\n          getIdentifiedElementByHashAddress.located = true;\n          getIdentifiedElementByHashAddress.label.click();\n          getIdentifiedElementByHashAddress.focus();\n          document.head.querySelector('title').innerHTML = \"엔비전스 웹접근성 도서관 - \" + getIdentifiedElementByHashAddress.innerText.trim();\n        } else {\n          const fallback = this.querySelectorAll('treeview-item')[0];\n          fallback.label.click();\n          document.head.querySelector('title').innerHTML = \"엔비전스 웹접근성 도서관 - \" + fallback.innerText.trim();\n        }\n      }\n    }\n\n    connectedCallback() {\n      CE.whenDefined(\"treeview-item\").then(_ => {\n        [...this.children].forEach(_ => {\n          if (_.tagName.toLowerCase() !== \"treeview-item\") {\n            _.remove();\n          }\n        });\n        this.treeitem_init();\n        window.addEventListener('DOMContentLoaded', this.routerEvent.bind(this));\n        window.addEventListener('load', this.routerEvent.bind(this));\n        window.addEventListener('hashchange', this.routerEvent.bind(this));\n        window.addEventListener('keydown', evt => {\n          const AccessKey = this.getAttribute('access-key');\n\n          if (Boolean(AccessKey)) {\n            const reg_isAlphabetOrDigit = /^(Key[A-Z]|Digit[0-9])$/i;\n\n            if (reg_isAlphabetOrDigit.test(AccessKey)) {\n              let Key = AccessKey;\n\n              if (evt.code === Key && evt.altKey) {\n                evt.preventDefault();\n                this.locatedElement.focus();\n              }\n            }\n          }\n        });\n        this.addEventListener('keydown', evt => {\n          if (this.getParentTreeviewLayout) {\n            if (this.getParentTreeviewLayout.isMobileScreenSize && evt.key === \"Tab\") {\n              evt.preventDefault();\n              this.getParentTreeviewLayout.hideTreeview = true;\n              this.getParentTreeviewLayout.treeviewOpener.focus();\n            }\n          }\n        });\n      });\n    }\n\n  }\n\n  class TreeviewItemElement extends HTMLElement {\n    constructor() {\n      super();\n      this.itemIndex = [...this.parentTreeView.querySelectorAll('treeview-item')].indexOf(this);\n      this.uid = this.id ? this.id : this.parentTreeView.id + \"_item-no\" + (this.itemIndex + 1);\n      this.id = this.id ? this.id : this.uid;\n      const shadow = this.attachShadow({\n        mode: \"open\"\n      });\n      const template = document.createElement('template');\n      template.innerHTML = `\n            <style>\n                :host {\n                    width:100%;\n                    display:flex;\n                    flex-flow:column;\n                    user-select:none;\n                    box-sizing:border-box;\n                }\n                :host(:focus) {\n                    outline:none; \n                }\n\n                :host(:focus) [part=\"label\"] {\n                    background-color:rgba(0,50,255,0.6);\n                    color:white;\n                }\n\n                :host(:not([expanded])) ::slotted(treeview-item) {\n                    display:none;\n                }\n\n                :host(:not([expanded])) div{\n                    display:none;\n                }\n\n                :host([expanded]) div {\n                    display:flex;\n                    width:100%;\n                    flex-flow:column;\n                    box-sizing:border-box;\n                    padding-left:1em;\n                }\n\n                :host span[id] {\n                    display:flex;\n                    width:100%;\n                    font-size:1.2em;\n                }\n\n                [part=\"label\"] {\n                    display:block;\n                    width:100%;\n                }\n\n                :host [part=\"symbol\"]{\n                    display:flex;\n                    justify-content:center;\n                    align-items:center;\n                }\n\n                :host [part=\"symbol\"]:before {\n                    content:\"▶\";\n                    font-size:0.7em;\n                }\n                \n                :host([aria-expanded=\"true\"]) [part=\"symbol\"]:before{\n                    content:\"▼\";\n                }\n            </style>\n            <span id=\"${this.id}_label\">\n                <span part=\"symbol\" aria-hidden=\"true\"></span>\n                <span part=\"label\" aria-hidden=\"true\"><slot></slot></span>\n            </span>\n            <div role=\"group\" aria-labelledby=\"${this.id}_label\">\n                <slot name=\"sub-tree\"></slot>\n            </div>\n        `;\n      shadow.appendChild(template.content.cloneNode(true));\n      this.treeviewSymbol = this.shadowRoot.querySelector('span[part=\"symbol\"]');\n      this.label = this.shadowRoot.querySelector('span[part=\"label\"]');\n      this.setAttribute('role', 'treeitem');\n      this.located ? this.setAttribute('tabindex', \"0\") : this.removeAttribute('tabindex');\n      this.setAttribute('aria-label', this.label.querySelector('slot').assignedNodes()[0].textContent.trim());\n    }\n\n    get activated() {\n      return this.hasAttribute('activated');\n    }\n\n    set activated(v) {\n      const bool = Boolean(v);\n\n      if (this.parentTreeView.activatedElement) {\n        this.parentTreeView.activatedElement.removeAttribute('activated');\n      }\n\n      this.toggleAttribute('activated', bool);\n    }\n\n    set uid(str) {\n      if (Boolean(str) && typeof str === \"string\") {\n        this.setAttribute('uid', str);\n      }\n    }\n\n    get uid() {\n      return this.getAttribute('uid');\n    }\n\n    get parentTreeView() {\n      return this.closest('treeview-list');\n    }\n\n    get hasSubTreeViewItems() {\n      return this.querySelectorAll(':scope>treeview-item').length > 0;\n    }\n\n    get isSubTreeViewItem() {\n      return this.parentElement.tagName.toLowerCase() !== \"treeview-list\";\n    }\n\n    get panelRef() {\n      const pRef = this.getAttribute('panel-ref');\n\n      if (Boolean(pRef)) {\n        return pRef;\n      }\n\n      return null;\n    }\n\n    get connectedPanel() {\n      if (Boolean(this.panelRef)) {\n        const panel = document.querySelector(`treeview-panel#${this.panelRef}`);\n\n        if (Boolean(panel)) {\n          return panel;\n        }\n      }\n\n      return null;\n    }\n\n    get subTreeItems() {\n      const subTree = [...this.querySelectorAll(':scope>treeview-item')];\n\n      if (subTree) {\n        return subTree;\n      }\n\n      return null;\n    }\n\n    get previous() {\n      const index = this.parentTreeView.item.indexOf(this) - 1;\n      const prev = this.parentTreeView.item[index];\n\n      if (prev) {\n        return prev;\n      }\n\n      return this.parentTreeView.locatedElement;\n    }\n\n    get next() {\n      const index = this.parentTreeView.item.indexOf(this) + 1;\n      const next = this.parentTreeView.item[index];\n\n      if (next) {\n        return next;\n      }\n\n      return this.parentTreeView.locatedElement;\n    }\n\n    get first() {\n      const first = this.parentTreeView.item[0];\n      return first;\n    }\n\n    get last() {\n      const last = this.parentTreeView.item[this.parentTreeView.item_count - 1];\n      return last;\n    }\n\n    set located(v) {\n      if (this.parentTreeView.locatedElement) {\n        this.parentTreeView.locatedElement.removeAttribute('located');\n      }\n\n      this.setAttribute('located', \"\");\n    }\n\n    get located() {\n      return this.hasAttribute('located');\n    }\n\n    get expanded() {\n      if (this.hasSubTreeViewItems) {\n        return this.hasAttribute('expanded');\n      }\n\n      return false;\n    }\n\n    set expanded(v) {\n      const bool = Boolean(v);\n\n      if (this.hasSubTreeViewItems) {\n        this.toggleAttribute('expanded', bool);\n      }\n    }\n\n    static get observedAttributes() {\n      return ['panel-ref', 'located', 'expanded', 'onclick', 'activated'];\n    }\n\n    navigateHandler(evt) {\n      const [KEY_PREVENT_SCROLL, KEY_ACTIVATE, KEY_PREVIOUS, KEY_NEXT, KEY_FIRST, KEY_LAST, KEY_COLLAPSE, KEY_EXPAND] = [\" \", \"Enter\", \"ArrowUp\", \"ArrowDown\", \"Home\", \"End\", \"ArrowLeft\", \"ArrowRight\"];\n      const key = evt.key;\n\n      switch (key) {\n        case KEY_PREVIOUS:\n          evt.preventDefault();\n          evt.stopImmediatePropagation();\n          this.previous.located = true;\n          this.previous.focus();\n          break;\n\n        case KEY_NEXT:\n          evt.preventDefault();\n          evt.stopImmediatePropagation();\n          this.next.located = true;\n          this.next.focus();\n          break;\n\n        case KEY_LAST:\n          evt.preventDefault();\n          evt.stopImmediatePropagation();\n          this.last.located = true;\n          this.last.focus();\n          break;\n\n        case KEY_FIRST:\n          evt.preventDefault();\n          evt.stopImmediatePropagation();\n          this.first.located = true;\n          this.first.focus();\n\n        case KEY_EXPAND:\n          evt.preventDefault();\n          evt.stopImmediatePropagation();\n\n          if (!this.expanded) {\n            this.expanded = true;\n          } else {\n            this.next.located = true;\n            this.next.focus();\n          }\n\n          break;\n\n        case KEY_COLLAPSE:\n          if (this.isSubTreeViewItem) {\n            evt.preventDefault();\n            evt.stopImmediatePropagation();\n\n            if (this.hasSubTreeViewItems && this.expanded) {\n              this.expanded = false;\n            } else {\n              this.parentElement.located = true;\n              this.parentElement.focus();\n            }\n          } else {\n            evt.preventDefault();\n            evt.stopImmediatePropagation();\n            this.expanded = false;\n          }\n\n          break;\n\n        case KEY_ACTIVATE:\n          evt.preventDefault();\n          evt.stopImmediatePropagation();\n          this.label.click();\n          break;\n      }\n    }\n\n    activateCallback = null;\n\n    onclick(evt) {\n      evt.stopPropagation();\n      const originalOnClick = this.getAttribute('onclick');\n\n      if (this.parentTreeView.treeViewMode === \"menu-mode\") {\n        this.activateCallback = originalOnClick;\n      } else {\n        this.removeAttribute('onclick');\n        console.error(`Do not use the onclick attribute and onclick method on treeview that's not menu-mode. onclick can be used it when you had set a 'treeview-mode' attribute as \"menu-mode\"!`);\n      }\n    }\n\n    activateHandler(evt) {\n      evt.stopPropagation();\n      evt.stopImmediatePropagation();\n\n      if (this.parentTreeView.isHashRoutingEnabled) {\n        location.hash = this.id;\n        document.head.querySelector('title').innerHTML = \"엔비전스 웹접근성 도서관 - \" + this.innerText.trim();\n      }\n\n      this.located = true;\n      this.parentTreeView.locatedElement.focus();\n\n      if (this.parentTreeView.isSolutionsMenu) {\n        if (this.getParentTreeviewLayout.isMobileScreenSize) {\n          this.getParentTreeviewLayout.hideTreeview = true;\n          this.getParentTreeviewLayout.treeviewOpener.focus();\n        }\n      }\n\n      if (!this.hasSubTreeViewItems && this.activateCallback && typeof this.activateCallback === \"function\") {\n        eval(this.activateCallback);\n      }\n\n      if (this.hasSubTreeViewItems) {\n        const mode = this.parentTreeView.treeViewMode; //evt.isTrusted\n\n        if (mode === \"menu-mode\") {\n          this.treeviewSymbol.click();\n        }\n      }\n\n      if (this.parentTreeView.treeViewMode === \"panel-mode\" && this.connectedPanel) {\n        this.connectedPanel.show = true;\n        this.activated = true;\n        /* this.parentTreeView.announcement(`${this.label.querySelector('slot').assignedNodes()[0].textContent} activated`); */\n      }\n\n      this.parentTreeView.allItems.forEach(_ => {\n        if (_ !== this && Boolean(this.connectedPanel)) {\n          if (Boolean(_.connectedPanel)) {\n            _.connectedPanel.show = false;\n          }\n        }\n      });\n    }\n\n    get parentContext() {\n      const arr = [];\n\n      function getParentContext(el) {\n        if (el.parentElement.tagName.toLowerCase() === 'treeview-item') {\n          arr.push(el.parentElement);\n          getParentContext(el.parentElement);\n        }\n      }\n\n      getParentContext(this);\n      return arr;\n    }\n\n    get getParentTreeviewLayout() {\n      return this.closest('treeview-layout');\n    }\n\n    connectedCallback() {\n      if (this.panelRef) {\n        this.setAttribute('aria-controls', this.panelRef);\n      }\n\n      if (this.hasSubTreeViewItems) {\n        this.setAttribute('aria-expanded', String(this.expanded));\n      }\n\n      CE.whenDefined(\"treeview-item\").then(_ => {\n        this.subTreeItems.forEach(_ => {\n          _.slot = \"sub-tree\";\n        });\n        this.addEventListener('dblclick', evt => {\n          evt.stopImmediatePropagation();\n          this.treeviewSymbol.click();\n        });\n        this.addEventListener('click', evt => {\n          if (Boolean(mo.mobile())) {\n            evt.stopImmediatePropagation();\n            this.treeviewSymbol.click();\n            this.label.click();\n          }\n        });\n        this.treeviewSymbol.addEventListener('click', evt => {\n          evt.stopImmediatePropagation();\n\n          if (evt.isTrusted) {\n            this.located = true;\n            this.focus();\n          }\n\n          if (this.hasSubTreeViewItems) {\n            this.expanded = !this.expanded;\n          }\n        });\n        this.label.addEventListener('click', this.activateHandler.bind(this));\n        this.addEventListener('keydown', this.navigateHandler.bind(this));\n        this.expanded = this.expanded;\n      });\n    }\n\n    attributeChangedCallback(name, oV, nV) {\n      switch (name) {\n        case \"located\":\n          if (nV === \"\") {\n            this.setAttribute('tabindex', '0');\n          } else {\n            this.removeAttribute('tabindex');\n          }\n\n          break;\n\n        case \"activated\":\n          if (nV === \"\") {\n            this.setAttribute('aria-current', 'true');\n          } else {\n            this.removeAttribute('aria-current');\n          }\n\n          break;\n\n        case \"expanded\":\n          if (nV === \"\") {\n            this.setAttribute('aria-expanded', 'true');\n          } else {\n            this.setAttribute('aria-expanded', 'false');\n          }\n\n          break;\n\n        case \"onclick\":\n          if (this.parentTreeView.treeViewMode !== \"menu-mode\") {\n            if (Boolean(nV)) {\n              this.removeAttribute('onclick');\n              console.error(`Do not use the onclick attribute and onclick method on treeview that's not menu-mode. onclick can be used when you had set a 'treeview-mode' attribute as \"menu-mode\"!`);\n            }\n          } else {\n            if (Boolean(nV)) {\n              if (this.hasSubTreeViewItems) {\n                this.removeAttribute('onclick');\n                console.error(`Do not use the onclick attribute and onclick method on treeview that has some sub treeitem. onclick can be used it on treeitem that has no children`);\n              } else {\n                this.activateCallback = this.getAttribute('onclick');\n              }\n            }\n          }\n\n          break;\n\n        case \"panel-ref\":\n          if (Boolean(nV)) {\n            this.setAttribute('aria-controls', nV);\n          }\n\n      }\n    }\n\n  }\n\n  class TreeViewContentPanel extends HTMLElement {\n    constructor() {\n      super();\n      this.indexOfDocument = [...document.querySelectorAll(\"treeview-panel\")].indexOf(this);\n      this.id = this.id ? this.id : \"panel-auto-id\" + (this.indexOfDocument + 1);\n      this.attachShadow({\n        mode: \"open\"\n      });\n      this.setAttribute('role', 'region');\n      const shadow = this.shadowRoot;\n      const template = document.createElement(\"template\");\n      template.innerHTML = `\n            <style>\n                :host {\n                    display:flex;\n                    position:relative;\n                    width:100%;\n                    max-height:100%;\n                    flex-flow:column;\n                }\n                :host, :host *{\n                    box-sizing:border-box;\n                    position:relative;\n                }\n\n                :host [part=\"content\"]{\n                    flex:1;\n                    height:100%;\n                    width:100%;\n                    overflow-y:auto;\n                    overflow-x:hidden;\n                }\n\n                :host(:not([show])) { /*show 속성이 없으면 나타나지 않도록 */\n                    display:none;\n                }\n            </style>\n            <slot name=\"nav\"></slot>\n            <slot part=\"content\"></slot>  <!-- 이 슬롯으로 콘텐츠가 들어옵니다.-->\n        `;\n      this.setAttribute('role', 'region');\n      shadow.appendChild(template.content.cloneNode(true));\n    }\n\n    get controller() {\n      return document.querySelector(`treeview-item[panel-ref=\"${this.id}\"]`);\n    }\n\n    get show() {\n      // 현재 패널이 show 상태인지 가져옵니다. 이 getter는 굳이 필요하지 않지만 형식상 넣습니다.\n      return this.hasAttribute('show');\n    }\n\n    set show(b) {\n      // show 속성을 조정하는 setter 프로퍼티,\n      const value = Boolean(b);\n      this.toggleAttribute('show', value);\n    }\n\n  }\n\n  CE.define('treeview-layout', TreeviewLayoutElement);\n  CE.define('treeview-list', TreeviewListElement);\n  CE.define('treeview-item', TreeviewItemElement);\n  CE.define('treeview-panel', TreeViewContentPanel);\n})());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/treeview.js\n");

/***/ }),

/***/ "./node_modules/mobile-detect/mobile-detect.js":
/*!*****************************************************!*\
  !*** ./node_modules/mobile-detect/mobile-detect.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// THIS FILE IS GENERATED - DO NOT EDIT!\n/*!mobile-detect v1.4.5 2021-03-13*/\n/*global module:false, define:false*/\n/*jshint latedef:false*/\n/*!@license Copyright 2013, Heinrich Goebl, License: MIT, see https://github.com/hgoebl/mobile-detect.js*/\n(function (define, undefined) {\ndefine(function () {\n    'use strict';\n\n    var impl = {};\n\n    impl.mobileDetectRules = {\n    \"phones\": {\n        \"iPhone\": \"\\\\biPhone\\\\b|\\\\biPod\\\\b\",\n        \"BlackBerry\": \"BlackBerry|\\\\bBB10\\\\b|rim[0-9]+|\\\\b(BBA100|BBB100|BBD100|BBE100|BBF100|STH100)\\\\b-[0-9]+\",\n        \"Pixel\": \"; \\\\bPixel\\\\b\",\n        \"HTC\": \"HTC|HTC.*(Sensation|Evo|Vision|Explorer|6800|8100|8900|A7272|S510e|C110e|Legend|Desire|T8282)|APX515CKT|Qtek9090|APA9292KT|HD_mini|Sensation.*Z710e|PG86100|Z715e|Desire.*(A8181|HD)|ADR6200|ADR6400L|ADR6425|001HT|Inspire 4G|Android.*\\\\bEVO\\\\b|T-Mobile G1|Z520m|Android [0-9.]+; Pixel\",\n        \"Nexus\": \"Nexus One|Nexus S|Galaxy.*Nexus|Android.*Nexus.*Mobile|Nexus 4|Nexus 5|Nexus 5X|Nexus 6\",\n        \"Dell\": \"Dell[;]? (Streak|Aero|Venue|Venue Pro|Flash|Smoke|Mini 3iX)|XCD28|XCD35|\\\\b001DL\\\\b|\\\\b101DL\\\\b|\\\\bGS01\\\\b\",\n        \"Motorola\": \"Motorola|DROIDX|DROID BIONIC|\\\\bDroid\\\\b.*Build|Android.*Xoom|HRI39|MOT-|A1260|A1680|A555|A853|A855|A953|A955|A956|Motorola.*ELECTRIFY|Motorola.*i1|i867|i940|MB200|MB300|MB501|MB502|MB508|MB511|MB520|MB525|MB526|MB611|MB612|MB632|MB810|MB855|MB860|MB861|MB865|MB870|ME501|ME502|ME511|ME525|ME600|ME632|ME722|ME811|ME860|ME863|ME865|MT620|MT710|MT716|MT720|MT810|MT870|MT917|Motorola.*TITANIUM|WX435|WX445|XT300|XT301|XT311|XT316|XT317|XT319|XT320|XT390|XT502|XT530|XT531|XT532|XT535|XT603|XT610|XT611|XT615|XT681|XT701|XT702|XT711|XT720|XT800|XT806|XT860|XT862|XT875|XT882|XT883|XT894|XT901|XT907|XT909|XT910|XT912|XT928|XT926|XT915|XT919|XT925|XT1021|\\\\bMoto E\\\\b|XT1068|XT1092|XT1052\",\n        \"Samsung\": \"\\\\bSamsung\\\\b|SM-G950F|SM-G955F|SM-G9250|GT-19300|SGH-I337|BGT-S5230|GT-B2100|GT-B2700|GT-B2710|GT-B3210|GT-B3310|GT-B3410|GT-B3730|GT-B3740|GT-B5510|GT-B5512|GT-B5722|GT-B6520|GT-B7300|GT-B7320|GT-B7330|GT-B7350|GT-B7510|GT-B7722|GT-B7800|GT-C3010|GT-C3011|GT-C3060|GT-C3200|GT-C3212|GT-C3212I|GT-C3262|GT-C3222|GT-C3300|GT-C3300K|GT-C3303|GT-C3303K|GT-C3310|GT-C3322|GT-C3330|GT-C3350|GT-C3500|GT-C3510|GT-C3530|GT-C3630|GT-C3780|GT-C5010|GT-C5212|GT-C6620|GT-C6625|GT-C6712|GT-E1050|GT-E1070|GT-E1075|GT-E1080|GT-E1081|GT-E1085|GT-E1087|GT-E1100|GT-E1107|GT-E1110|GT-E1120|GT-E1125|GT-E1130|GT-E1160|GT-E1170|GT-E1175|GT-E1180|GT-E1182|GT-E1200|GT-E1210|GT-E1225|GT-E1230|GT-E1390|GT-E2100|GT-E2120|GT-E2121|GT-E2152|GT-E2220|GT-E2222|GT-E2230|GT-E2232|GT-E2250|GT-E2370|GT-E2550|GT-E2652|GT-E3210|GT-E3213|GT-I5500|GT-I5503|GT-I5700|GT-I5800|GT-I5801|GT-I6410|GT-I6420|GT-I7110|GT-I7410|GT-I7500|GT-I8000|GT-I8150|GT-I8160|GT-I8190|GT-I8320|GT-I8330|GT-I8350|GT-I8530|GT-I8700|GT-I8703|GT-I8910|GT-I9000|GT-I9001|GT-I9003|GT-I9010|GT-I9020|GT-I9023|GT-I9070|GT-I9082|GT-I9100|GT-I9103|GT-I9220|GT-I9250|GT-I9300|GT-I9305|GT-I9500|GT-I9505|GT-M3510|GT-M5650|GT-M7500|GT-M7600|GT-M7603|GT-M8800|GT-M8910|GT-N7000|GT-S3110|GT-S3310|GT-S3350|GT-S3353|GT-S3370|GT-S3650|GT-S3653|GT-S3770|GT-S3850|GT-S5210|GT-S5220|GT-S5229|GT-S5230|GT-S5233|GT-S5250|GT-S5253|GT-S5260|GT-S5263|GT-S5270|GT-S5300|GT-S5330|GT-S5350|GT-S5360|GT-S5363|GT-S5369|GT-S5380|GT-S5380D|GT-S5560|GT-S5570|GT-S5600|GT-S5603|GT-S5610|GT-S5620|GT-S5660|GT-S5670|GT-S5690|GT-S5750|GT-S5780|GT-S5830|GT-S5839|GT-S6102|GT-S6500|GT-S7070|GT-S7200|GT-S7220|GT-S7230|GT-S7233|GT-S7250|GT-S7500|GT-S7530|GT-S7550|GT-S7562|GT-S7710|GT-S8000|GT-S8003|GT-S8500|GT-S8530|GT-S8600|SCH-A310|SCH-A530|SCH-A570|SCH-A610|SCH-A630|SCH-A650|SCH-A790|SCH-A795|SCH-A850|SCH-A870|SCH-A890|SCH-A930|SCH-A950|SCH-A970|SCH-A990|SCH-I100|SCH-I110|SCH-I400|SCH-I405|SCH-I500|SCH-I510|SCH-I515|SCH-I600|SCH-I730|SCH-I760|SCH-I770|SCH-I830|SCH-I910|SCH-I920|SCH-I959|SCH-LC11|SCH-N150|SCH-N300|SCH-R100|SCH-R300|SCH-R351|SCH-R400|SCH-R410|SCH-T300|SCH-U310|SCH-U320|SCH-U350|SCH-U360|SCH-U365|SCH-U370|SCH-U380|SCH-U410|SCH-U430|SCH-U450|SCH-U460|SCH-U470|SCH-U490|SCH-U540|SCH-U550|SCH-U620|SCH-U640|SCH-U650|SCH-U660|SCH-U700|SCH-U740|SCH-U750|SCH-U810|SCH-U820|SCH-U900|SCH-U940|SCH-U960|SCS-26UC|SGH-A107|SGH-A117|SGH-A127|SGH-A137|SGH-A157|SGH-A167|SGH-A177|SGH-A187|SGH-A197|SGH-A227|SGH-A237|SGH-A257|SGH-A437|SGH-A517|SGH-A597|SGH-A637|SGH-A657|SGH-A667|SGH-A687|SGH-A697|SGH-A707|SGH-A717|SGH-A727|SGH-A737|SGH-A747|SGH-A767|SGH-A777|SGH-A797|SGH-A817|SGH-A827|SGH-A837|SGH-A847|SGH-A867|SGH-A877|SGH-A887|SGH-A897|SGH-A927|SGH-B100|SGH-B130|SGH-B200|SGH-B220|SGH-C100|SGH-C110|SGH-C120|SGH-C130|SGH-C140|SGH-C160|SGH-C170|SGH-C180|SGH-C200|SGH-C207|SGH-C210|SGH-C225|SGH-C230|SGH-C417|SGH-C450|SGH-D307|SGH-D347|SGH-D357|SGH-D407|SGH-D415|SGH-D780|SGH-D807|SGH-D980|SGH-E105|SGH-E200|SGH-E315|SGH-E316|SGH-E317|SGH-E335|SGH-E590|SGH-E635|SGH-E715|SGH-E890|SGH-F300|SGH-F480|SGH-I200|SGH-I300|SGH-I320|SGH-I550|SGH-I577|SGH-I600|SGH-I607|SGH-I617|SGH-I627|SGH-I637|SGH-I677|SGH-I700|SGH-I717|SGH-I727|SGH-i747M|SGH-I777|SGH-I780|SGH-I827|SGH-I847|SGH-I857|SGH-I896|SGH-I897|SGH-I900|SGH-I907|SGH-I917|SGH-I927|SGH-I937|SGH-I997|SGH-J150|SGH-J200|SGH-L170|SGH-L700|SGH-M110|SGH-M150|SGH-M200|SGH-N105|SGH-N500|SGH-N600|SGH-N620|SGH-N625|SGH-N700|SGH-N710|SGH-P107|SGH-P207|SGH-P300|SGH-P310|SGH-P520|SGH-P735|SGH-P777|SGH-Q105|SGH-R210|SGH-R220|SGH-R225|SGH-S105|SGH-S307|SGH-T109|SGH-T119|SGH-T139|SGH-T209|SGH-T219|SGH-T229|SGH-T239|SGH-T249|SGH-T259|SGH-T309|SGH-T319|SGH-T329|SGH-T339|SGH-T349|SGH-T359|SGH-T369|SGH-T379|SGH-T409|SGH-T429|SGH-T439|SGH-T459|SGH-T469|SGH-T479|SGH-T499|SGH-T509|SGH-T519|SGH-T539|SGH-T559|SGH-T589|SGH-T609|SGH-T619|SGH-T629|SGH-T639|SGH-T659|SGH-T669|SGH-T679|SGH-T709|SGH-T719|SGH-T729|SGH-T739|SGH-T746|SGH-T749|SGH-T759|SGH-T769|SGH-T809|SGH-T819|SGH-T839|SGH-T919|SGH-T929|SGH-T939|SGH-T959|SGH-T989|SGH-U100|SGH-U200|SGH-U800|SGH-V205|SGH-V206|SGH-X100|SGH-X105|SGH-X120|SGH-X140|SGH-X426|SGH-X427|SGH-X475|SGH-X495|SGH-X497|SGH-X507|SGH-X600|SGH-X610|SGH-X620|SGH-X630|SGH-X700|SGH-X820|SGH-X890|SGH-Z130|SGH-Z150|SGH-Z170|SGH-ZX10|SGH-ZX20|SHW-M110|SPH-A120|SPH-A400|SPH-A420|SPH-A460|SPH-A500|SPH-A560|SPH-A600|SPH-A620|SPH-A660|SPH-A700|SPH-A740|SPH-A760|SPH-A790|SPH-A800|SPH-A820|SPH-A840|SPH-A880|SPH-A900|SPH-A940|SPH-A960|SPH-D600|SPH-D700|SPH-D710|SPH-D720|SPH-I300|SPH-I325|SPH-I330|SPH-I350|SPH-I500|SPH-I600|SPH-I700|SPH-L700|SPH-M100|SPH-M220|SPH-M240|SPH-M300|SPH-M305|SPH-M320|SPH-M330|SPH-M350|SPH-M360|SPH-M370|SPH-M380|SPH-M510|SPH-M540|SPH-M550|SPH-M560|SPH-M570|SPH-M580|SPH-M610|SPH-M620|SPH-M630|SPH-M800|SPH-M810|SPH-M850|SPH-M900|SPH-M910|SPH-M920|SPH-M930|SPH-N100|SPH-N200|SPH-N240|SPH-N300|SPH-N400|SPH-Z400|SWC-E100|SCH-i909|GT-N7100|GT-N7105|SCH-I535|SM-N900A|SGH-I317|SGH-T999L|GT-S5360B|GT-I8262|GT-S6802|GT-S6312|GT-S6310|GT-S5312|GT-S5310|GT-I9105|GT-I8510|GT-S6790N|SM-G7105|SM-N9005|GT-S5301|GT-I9295|GT-I9195|SM-C101|GT-S7392|GT-S7560|GT-B7610|GT-I5510|GT-S7582|GT-S7530E|GT-I8750|SM-G9006V|SM-G9008V|SM-G9009D|SM-G900A|SM-G900D|SM-G900F|SM-G900H|SM-G900I|SM-G900J|SM-G900K|SM-G900L|SM-G900M|SM-G900P|SM-G900R4|SM-G900S|SM-G900T|SM-G900V|SM-G900W8|SHV-E160K|SCH-P709|SCH-P729|SM-T2558|GT-I9205|SM-G9350|SM-J120F|SM-G920F|SM-G920V|SM-G930F|SM-N910C|SM-A310F|GT-I9190|SM-J500FN|SM-G903F|SM-J330F|SM-G610F|SM-G981B|SM-G892A|SM-A530F\",\n        \"LG\": \"\\\\bLG\\\\b;|LG[- ]?(C800|C900|E400|E610|E900|E-900|F160|F180K|F180L|F180S|730|855|L160|LS740|LS840|LS970|LU6200|MS690|MS695|MS770|MS840|MS870|MS910|P500|P700|P705|VM696|AS680|AS695|AX840|C729|E970|GS505|272|C395|E739BK|E960|L55C|L75C|LS696|LS860|P769BK|P350|P500|P509|P870|UN272|US730|VS840|VS950|LN272|LN510|LS670|LS855|LW690|MN270|MN510|P509|P769|P930|UN200|UN270|UN510|UN610|US670|US740|US760|UX265|UX840|VN271|VN530|VS660|VS700|VS740|VS750|VS910|VS920|VS930|VX9200|VX11000|AX840A|LW770|P506|P925|P999|E612|D955|D802|MS323|M257)|LM-G710\",\n        \"Sony\": \"SonyST|SonyLT|SonyEricsson|SonyEricssonLT15iv|LT18i|E10i|LT28h|LT26w|SonyEricssonMT27i|C5303|C6902|C6903|C6906|C6943|D2533|SOV34|601SO|F8332\",\n        \"Asus\": \"Asus.*Galaxy|PadFone.*Mobile\",\n        \"Xiaomi\": \"^(?!.*\\\\bx11\\\\b).*xiaomi.*$|POCOPHONE F1|MI 8|Redmi Note 9S|Redmi Note 5A Prime|N2G47H|M2001J2G|M2001J2I|M1805E10A|M2004J11G|M1902F1G|M2002J9G|M2004J19G|M2003J6A1G\",\n        \"NokiaLumia\": \"Lumia [0-9]{3,4}\",\n        \"Micromax\": \"Micromax.*\\\\b(A210|A92|A88|A72|A111|A110Q|A115|A116|A110|A90S|A26|A51|A35|A54|A25|A27|A89|A68|A65|A57|A90)\\\\b\",\n        \"Palm\": \"PalmSource|Palm\",\n        \"Vertu\": \"Vertu|Vertu.*Ltd|Vertu.*Ascent|Vertu.*Ayxta|Vertu.*Constellation(F|Quest)?|Vertu.*Monika|Vertu.*Signature\",\n        \"Pantech\": \"PANTECH|IM-A850S|IM-A840S|IM-A830L|IM-A830K|IM-A830S|IM-A820L|IM-A810K|IM-A810S|IM-A800S|IM-T100K|IM-A725L|IM-A780L|IM-A775C|IM-A770K|IM-A760S|IM-A750K|IM-A740S|IM-A730S|IM-A720L|IM-A710K|IM-A690L|IM-A690S|IM-A650S|IM-A630K|IM-A600S|VEGA PTL21|PT003|P8010|ADR910L|P6030|P6020|P9070|P4100|P9060|P5000|CDM8992|TXT8045|ADR8995|IS11PT|P2030|P6010|P8000|PT002|IS06|CDM8999|P9050|PT001|TXT8040|P2020|P9020|P2000|P7040|P7000|C790\",\n        \"Fly\": \"IQ230|IQ444|IQ450|IQ440|IQ442|IQ441|IQ245|IQ256|IQ236|IQ255|IQ235|IQ245|IQ275|IQ240|IQ285|IQ280|IQ270|IQ260|IQ250\",\n        \"Wiko\": \"KITE 4G|HIGHWAY|GETAWAY|STAIRWAY|DARKSIDE|DARKFULL|DARKNIGHT|DARKMOON|SLIDE|WAX 4G|RAINBOW|BLOOM|SUNSET|GOA(?!nna)|LENNY|BARRY|IGGY|OZZY|CINK FIVE|CINK PEAX|CINK PEAX 2|CINK SLIM|CINK SLIM 2|CINK +|CINK KING|CINK PEAX|CINK SLIM|SUBLIM\",\n        \"iMobile\": \"i-mobile (IQ|i-STYLE|idea|ZAA|Hitz)\",\n        \"SimValley\": \"\\\\b(SP-80|XT-930|SX-340|XT-930|SX-310|SP-360|SP60|SPT-800|SP-120|SPT-800|SP-140|SPX-5|SPX-8|SP-100|SPX-8|SPX-12)\\\\b\",\n        \"Wolfgang\": \"AT-B24D|AT-AS50HD|AT-AS40W|AT-AS55HD|AT-AS45q2|AT-B26D|AT-AS50Q\",\n        \"Alcatel\": \"Alcatel\",\n        \"Nintendo\": \"Nintendo (3DS|Switch)\",\n        \"Amoi\": \"Amoi\",\n        \"INQ\": \"INQ\",\n        \"OnePlus\": \"ONEPLUS\",\n        \"GenericPhone\": \"Tapatalk|PDA;|SAGEM|\\\\bmmp\\\\b|pocket|\\\\bpsp\\\\b|symbian|Smartphone|smartfon|treo|up.browser|up.link|vodafone|\\\\bwap\\\\b|nokia|Series40|Series60|S60|SonyEricsson|N900|MAUI.*WAP.*Browser\"\n    },\n    \"tablets\": {\n        \"iPad\": \"iPad|iPad.*Mobile\",\n        \"NexusTablet\": \"Android.*Nexus[\\\\s]+(7|9|10)\",\n        \"GoogleTablet\": \"Android.*Pixel C\",\n        \"SamsungTablet\": \"SAMSUNG.*Tablet|Galaxy.*Tab|SC-01C|GT-P1000|GT-P1003|GT-P1010|GT-P3105|GT-P6210|GT-P6800|GT-P6810|GT-P7100|GT-P7300|GT-P7310|GT-P7500|GT-P7510|SCH-I800|SCH-I815|SCH-I905|SGH-I957|SGH-I987|SGH-T849|SGH-T859|SGH-T869|SPH-P100|GT-P3100|GT-P3108|GT-P3110|GT-P5100|GT-P5110|GT-P6200|GT-P7320|GT-P7511|GT-N8000|GT-P8510|SGH-I497|SPH-P500|SGH-T779|SCH-I705|SCH-I915|GT-N8013|GT-P3113|GT-P5113|GT-P8110|GT-N8010|GT-N8005|GT-N8020|GT-P1013|GT-P6201|GT-P7501|GT-N5100|GT-N5105|GT-N5110|SHV-E140K|SHV-E140L|SHV-E140S|SHV-E150S|SHV-E230K|SHV-E230L|SHV-E230S|SHW-M180K|SHW-M180L|SHW-M180S|SHW-M180W|SHW-M300W|SHW-M305W|SHW-M380K|SHW-M380S|SHW-M380W|SHW-M430W|SHW-M480K|SHW-M480S|SHW-M480W|SHW-M485W|SHW-M486W|SHW-M500W|GT-I9228|SCH-P739|SCH-I925|GT-I9200|GT-P5200|GT-P5210|GT-P5210X|SM-T311|SM-T310|SM-T310X|SM-T210|SM-T210R|SM-T211|SM-P600|SM-P601|SM-P605|SM-P900|SM-P901|SM-T217|SM-T217A|SM-T217S|SM-P6000|SM-T3100|SGH-I467|XE500|SM-T110|GT-P5220|GT-I9200X|GT-N5110X|GT-N5120|SM-P905|SM-T111|SM-T2105|SM-T315|SM-T320|SM-T320X|SM-T321|SM-T520|SM-T525|SM-T530NU|SM-T230NU|SM-T330NU|SM-T900|XE500T1C|SM-P605V|SM-P905V|SM-T337V|SM-T537V|SM-T707V|SM-T807V|SM-P600X|SM-P900X|SM-T210X|SM-T230|SM-T230X|SM-T325|GT-P7503|SM-T531|SM-T330|SM-T530|SM-T705|SM-T705C|SM-T535|SM-T331|SM-T800|SM-T700|SM-T537|SM-T807|SM-P907A|SM-T337A|SM-T537A|SM-T707A|SM-T807A|SM-T237|SM-T807P|SM-P607T|SM-T217T|SM-T337T|SM-T807T|SM-T116NQ|SM-T116BU|SM-P550|SM-T350|SM-T550|SM-T9000|SM-P9000|SM-T705Y|SM-T805|GT-P3113|SM-T710|SM-T810|SM-T815|SM-T360|SM-T533|SM-T113|SM-T335|SM-T715|SM-T560|SM-T670|SM-T677|SM-T377|SM-T567|SM-T357T|SM-T555|SM-T561|SM-T713|SM-T719|SM-T813|SM-T819|SM-T580|SM-T355Y?|SM-T280|SM-T817A|SM-T820|SM-W700|SM-P580|SM-T587|SM-P350|SM-P555M|SM-P355M|SM-T113NU|SM-T815Y|SM-T585|SM-T285|SM-T825|SM-W708|SM-T835|SM-T830|SM-T837V|SM-T720|SM-T510|SM-T387V|SM-P610|SM-T290|SM-T515|SM-T590|SM-T595|SM-T725|SM-T817P|SM-P585N0|SM-T395|SM-T295|SM-T865|SM-P610N|SM-P615|SM-T970|SM-T380|SM-T5950|SM-T905|SM-T231|SM-T500|SM-T860\",\n        \"Kindle\": \"Kindle|Silk.*Accelerated|Android.*\\\\b(KFOT|KFTT|KFJWI|KFJWA|KFOTE|KFSOWI|KFTHWI|KFTHWA|KFAPWI|KFAPWA|WFJWAE|KFSAWA|KFSAWI|KFASWI|KFARWI|KFFOWI|KFGIWI|KFMEWI)\\\\b|Android.*Silk\\/[0-9.]+ like Chrome\\/[0-9.]+ (?!Mobile)\",\n        \"SurfaceTablet\": \"Windows NT [0-9.]+; ARM;.*(Tablet|ARMBJS)\",\n        \"HPTablet\": \"HP Slate (7|8|10)|HP ElitePad 900|hp-tablet|EliteBook.*Touch|HP 8|Slate 21|HP SlateBook 10\",\n        \"AsusTablet\": \"^.*PadFone((?!Mobile).)*$|Transformer|TF101|TF101G|TF300T|TF300TG|TF300TL|TF700T|TF700KL|TF701T|TF810C|ME171|ME301T|ME302C|ME371MG|ME370T|ME372MG|ME172V|ME173X|ME400C|Slider SL101|\\\\bK00F\\\\b|\\\\bK00C\\\\b|\\\\bK00E\\\\b|\\\\bK00L\\\\b|TX201LA|ME176C|ME102A|\\\\bM80TA\\\\b|ME372CL|ME560CG|ME372CG|ME302KL| K010 | K011 | K017 | K01E |ME572C|ME103K|ME170C|ME171C|\\\\bME70C\\\\b|ME581C|ME581CL|ME8510C|ME181C|P01Y|PO1MA|P01Z|\\\\bP027\\\\b|\\\\bP024\\\\b|\\\\bP00C\\\\b\",\n        \"BlackBerryTablet\": \"PlayBook|RIM Tablet\",\n        \"HTCtablet\": \"HTC_Flyer_P512|HTC Flyer|HTC Jetstream|HTC-P715a|HTC EVO View 4G|PG41200|PG09410\",\n        \"MotorolaTablet\": \"xoom|sholest|MZ615|MZ605|MZ505|MZ601|MZ602|MZ603|MZ604|MZ606|MZ607|MZ608|MZ609|MZ615|MZ616|MZ617\",\n        \"NookTablet\": \"Android.*Nook|NookColor|nook browser|BNRV200|BNRV200A|BNTV250|BNTV250A|BNTV400|BNTV600|LogicPD Zoom2\",\n        \"AcerTablet\": \"Android.*; \\\\b(A100|A101|A110|A200|A210|A211|A500|A501|A510|A511|A700|A701|W500|W500P|W501|W501P|W510|W511|W700|G100|G100W|B1-A71|B1-710|B1-711|A1-810|A1-811|A1-830)\\\\b|W3-810|\\\\bA3-A10\\\\b|\\\\bA3-A11\\\\b|\\\\bA3-A20\\\\b|\\\\bA3-A30|A3-A40\",\n        \"ToshibaTablet\": \"Android.*(AT100|AT105|AT200|AT205|AT270|AT275|AT300|AT305|AT1S5|AT500|AT570|AT700|AT830)|TOSHIBA.*FOLIO\",\n        \"LGTablet\": \"\\\\bL-06C|LG-V909|LG-V900|LG-V700|LG-V510|LG-V500|LG-V410|LG-V400|LG-VK810\\\\b\",\n        \"FujitsuTablet\": \"Android.*\\\\b(F-01D|F-02F|F-05E|F-10D|M532|Q572)\\\\b\",\n        \"PrestigioTablet\": \"PMP3170B|PMP3270B|PMP3470B|PMP7170B|PMP3370B|PMP3570C|PMP5870C|PMP3670B|PMP5570C|PMP5770D|PMP3970B|PMP3870C|PMP5580C|PMP5880D|PMP5780D|PMP5588C|PMP7280C|PMP7280C3G|PMP7280|PMP7880D|PMP5597D|PMP5597|PMP7100D|PER3464|PER3274|PER3574|PER3884|PER5274|PER5474|PMP5097CPRO|PMP5097|PMP7380D|PMP5297C|PMP5297C_QUAD|PMP812E|PMP812E3G|PMP812F|PMP810E|PMP880TD|PMT3017|PMT3037|PMT3047|PMT3057|PMT7008|PMT5887|PMT5001|PMT5002\",\n        \"LenovoTablet\": \"Lenovo TAB|Idea(Tab|Pad)( A1|A10| K1|)|ThinkPad([ ]+)?Tablet|YT3-850M|YT3-X90L|YT3-X90F|YT3-X90X|Lenovo.*(S2109|S2110|S5000|S6000|K3011|A3000|A3500|A1000|A2107|A2109|A1107|A5500|A7600|B6000|B8000|B8080)(-|)(FL|F|HV|H|)|TB-X103F|TB-X304X|TB-X304F|TB-X304L|TB-X505F|TB-X505L|TB-X505X|TB-X605F|TB-X605L|TB-8703F|TB-8703X|TB-8703N|TB-8704N|TB-8704F|TB-8704X|TB-8704V|TB-7304F|TB-7304I|TB-7304X|Tab2A7-10F|Tab2A7-20F|TB2-X30L|YT3-X50L|YT3-X50F|YT3-X50M|YT-X705F|YT-X703F|YT-X703L|YT-X705L|YT-X705X|TB2-X30F|TB2-X30L|TB2-X30M|A2107A-F|A2107A-H|TB3-730F|TB3-730M|TB3-730X|TB-7504F|TB-7504X|TB-X704F|TB-X104F|TB3-X70F|TB-X705F|TB-8504F|TB3-X70L|TB3-710F|TB-X704L\",\n        \"DellTablet\": \"Venue 11|Venue 8|Venue 7|Dell Streak 10|Dell Streak 7\",\n        \"YarvikTablet\": \"Android.*\\\\b(TAB210|TAB211|TAB224|TAB250|TAB260|TAB264|TAB310|TAB360|TAB364|TAB410|TAB411|TAB420|TAB424|TAB450|TAB460|TAB461|TAB464|TAB465|TAB467|TAB468|TAB07-100|TAB07-101|TAB07-150|TAB07-151|TAB07-152|TAB07-200|TAB07-201-3G|TAB07-210|TAB07-211|TAB07-212|TAB07-214|TAB07-220|TAB07-400|TAB07-485|TAB08-150|TAB08-200|TAB08-201-3G|TAB08-201-30|TAB09-100|TAB09-211|TAB09-410|TAB10-150|TAB10-201|TAB10-211|TAB10-400|TAB10-410|TAB13-201|TAB274EUK|TAB275EUK|TAB374EUK|TAB462EUK|TAB474EUK|TAB9-200)\\\\b\",\n        \"MedionTablet\": \"Android.*\\\\bOYO\\\\b|LIFE.*(P9212|P9514|P9516|S9512)|LIFETAB\",\n        \"ArnovaTablet\": \"97G4|AN10G2|AN7bG3|AN7fG3|AN8G3|AN8cG3|AN7G3|AN9G3|AN7dG3|AN7dG3ST|AN7dG3ChildPad|AN10bG3|AN10bG3DT|AN9G2\",\n        \"IntensoTablet\": \"INM8002KP|INM1010FP|INM805ND|Intenso Tab|TAB1004\",\n        \"IRUTablet\": \"M702pro\",\n        \"MegafonTablet\": \"MegaFon V9|\\\\bZTE V9\\\\b|Android.*\\\\bMT7A\\\\b\",\n        \"EbodaTablet\": \"E-Boda (Supreme|Impresspeed|Izzycomm|Essential)\",\n        \"AllViewTablet\": \"Allview.*(Viva|Alldro|City|Speed|All TV|Frenzy|Quasar|Shine|TX1|AX1|AX2)\",\n        \"ArchosTablet\": \"\\\\b(101G9|80G9|A101IT)\\\\b|Qilive 97R|Archos5|\\\\bARCHOS (70|79|80|90|97|101|FAMILYPAD|)(b|c|)(G10| Cobalt| TITANIUM(HD|)| Xenon| Neon|XSK| 2| XS 2| PLATINUM| CARBON|GAMEPAD)\\\\b\",\n        \"AinolTablet\": \"NOVO7|NOVO8|NOVO10|Novo7Aurora|Novo7Basic|NOVO7PALADIN|novo9-Spark\",\n        \"NokiaLumiaTablet\": \"Lumia 2520\",\n        \"SonyTablet\": \"Sony.*Tablet|Xperia Tablet|Sony Tablet S|SO-03E|SGPT12|SGPT13|SGPT114|SGPT121|SGPT122|SGPT123|SGPT111|SGPT112|SGPT113|SGPT131|SGPT132|SGPT133|SGPT211|SGPT212|SGPT213|SGP311|SGP312|SGP321|EBRD1101|EBRD1102|EBRD1201|SGP351|SGP341|SGP511|SGP512|SGP521|SGP541|SGP551|SGP621|SGP641|SGP612|SOT31|SGP771|SGP611|SGP612|SGP712\",\n        \"PhilipsTablet\": \"\\\\b(PI2010|PI3000|PI3100|PI3105|PI3110|PI3205|PI3210|PI3900|PI4010|PI7000|PI7100)\\\\b\",\n        \"CubeTablet\": \"Android.*(K8GT|U9GT|U10GT|U16GT|U17GT|U18GT|U19GT|U20GT|U23GT|U30GT)|CUBE U8GT\",\n        \"CobyTablet\": \"MID1042|MID1045|MID1125|MID1126|MID7012|MID7014|MID7015|MID7034|MID7035|MID7036|MID7042|MID7048|MID7127|MID8042|MID8048|MID8127|MID9042|MID9740|MID9742|MID7022|MID7010\",\n        \"MIDTablet\": \"M9701|M9000|M9100|M806|M1052|M806|T703|MID701|MID713|MID710|MID727|MID760|MID830|MID728|MID933|MID125|MID810|MID732|MID120|MID930|MID800|MID731|MID900|MID100|MID820|MID735|MID980|MID130|MID833|MID737|MID960|MID135|MID860|MID736|MID140|MID930|MID835|MID733|MID4X10\",\n        \"MSITablet\": \"MSI \\\\b(Primo 73K|Primo 73L|Primo 81L|Primo 77|Primo 93|Primo 75|Primo 76|Primo 73|Primo 81|Primo 91|Primo 90|Enjoy 71|Enjoy 7|Enjoy 10)\\\\b\",\n        \"SMiTTablet\": \"Android.*(\\\\bMID\\\\b|MID-560|MTV-T1200|MTV-PND531|MTV-P1101|MTV-PND530)\",\n        \"RockChipTablet\": \"Android.*(RK2818|RK2808A|RK2918|RK3066)|RK2738|RK2808A\",\n        \"FlyTablet\": \"IQ310|Fly Vision\",\n        \"bqTablet\": \"Android.*(bq)?.*\\\\b(Elcano|Curie|Edison|Maxwell|Kepler|Pascal|Tesla|Hypatia|Platon|Newton|Livingstone|Cervantes|Avant|Aquaris ([E|M]10|M8))\\\\b|Maxwell.*Lite|Maxwell.*Plus\",\n        \"HuaweiTablet\": \"MediaPad|MediaPad 7 Youth|IDEOS S7|S7-201c|S7-202u|S7-101|S7-103|S7-104|S7-105|S7-106|S7-201|S7-Slim|M2-A01L|BAH-L09|BAH-W09|AGS-L09|CMR-AL19\",\n        \"NecTablet\": \"\\\\bN-06D|\\\\bN-08D\",\n        \"PantechTablet\": \"Pantech.*P4100\",\n        \"BronchoTablet\": \"Broncho.*(N701|N708|N802|a710)\",\n        \"VersusTablet\": \"TOUCHPAD.*[78910]|\\\\bTOUCHTAB\\\\b\",\n        \"ZyncTablet\": \"z1000|Z99 2G|z930|z990|z909|Z919|z900\",\n        \"PositivoTablet\": \"TB07STA|TB10STA|TB07FTA|TB10FTA\",\n        \"NabiTablet\": \"Android.*\\\\bNabi\",\n        \"KoboTablet\": \"Kobo Touch|\\\\bK080\\\\b|\\\\bVox\\\\b Build|\\\\bArc\\\\b Build\",\n        \"DanewTablet\": \"DSlide.*\\\\b(700|701R|702|703R|704|802|970|971|972|973|974|1010|1012)\\\\b\",\n        \"TexetTablet\": \"NaviPad|TB-772A|TM-7045|TM-7055|TM-9750|TM-7016|TM-7024|TM-7026|TM-7041|TM-7043|TM-7047|TM-8041|TM-9741|TM-9747|TM-9748|TM-9751|TM-7022|TM-7021|TM-7020|TM-7011|TM-7010|TM-7023|TM-7025|TM-7037W|TM-7038W|TM-7027W|TM-9720|TM-9725|TM-9737W|TM-1020|TM-9738W|TM-9740|TM-9743W|TB-807A|TB-771A|TB-727A|TB-725A|TB-719A|TB-823A|TB-805A|TB-723A|TB-715A|TB-707A|TB-705A|TB-709A|TB-711A|TB-890HD|TB-880HD|TB-790HD|TB-780HD|TB-770HD|TB-721HD|TB-710HD|TB-434HD|TB-860HD|TB-840HD|TB-760HD|TB-750HD|TB-740HD|TB-730HD|TB-722HD|TB-720HD|TB-700HD|TB-500HD|TB-470HD|TB-431HD|TB-430HD|TB-506|TB-504|TB-446|TB-436|TB-416|TB-146SE|TB-126SE\",\n        \"PlaystationTablet\": \"Playstation.*(Portable|Vita)\",\n        \"TrekstorTablet\": \"ST10416-1|VT10416-1|ST70408-1|ST702xx-1|ST702xx-2|ST80208|ST97216|ST70104-2|VT10416-2|ST10216-2A|SurfTab\",\n        \"PyleAudioTablet\": \"\\\\b(PTBL10CEU|PTBL10C|PTBL72BC|PTBL72BCEU|PTBL7CEU|PTBL7C|PTBL92BC|PTBL92BCEU|PTBL9CEU|PTBL9CUK|PTBL9C)\\\\b\",\n        \"AdvanTablet\": \"Android.* \\\\b(E3A|T3X|T5C|T5B|T3E|T3C|T3B|T1J|T1F|T2A|T1H|T1i|E1C|T1-E|T5-A|T4|E1-B|T2Ci|T1-B|T1-D|O1-A|E1-A|T1-A|T3A|T4i)\\\\b \",\n        \"DanyTechTablet\": \"Genius Tab G3|Genius Tab S2|Genius Tab Q3|Genius Tab G4|Genius Tab Q4|Genius Tab G-II|Genius TAB GII|Genius TAB GIII|Genius Tab S1\",\n        \"GalapadTablet\": \"Android [0-9.]+; [a-z-]+; \\\\bG1\\\\b\",\n        \"MicromaxTablet\": \"Funbook|Micromax.*\\\\b(P250|P560|P360|P362|P600|P300|P350|P500|P275)\\\\b\",\n        \"KarbonnTablet\": \"Android.*\\\\b(A39|A37|A34|ST8|ST10|ST7|Smart Tab3|Smart Tab2)\\\\b\",\n        \"AllFineTablet\": \"Fine7 Genius|Fine7 Shine|Fine7 Air|Fine8 Style|Fine9 More|Fine10 Joy|Fine11 Wide\",\n        \"PROSCANTablet\": \"\\\\b(PEM63|PLT1023G|PLT1041|PLT1044|PLT1044G|PLT1091|PLT4311|PLT4311PL|PLT4315|PLT7030|PLT7033|PLT7033D|PLT7035|PLT7035D|PLT7044K|PLT7045K|PLT7045KB|PLT7071KG|PLT7072|PLT7223G|PLT7225G|PLT7777G|PLT7810K|PLT7849G|PLT7851G|PLT7852G|PLT8015|PLT8031|PLT8034|PLT8036|PLT8080K|PLT8082|PLT8088|PLT8223G|PLT8234G|PLT8235G|PLT8816K|PLT9011|PLT9045K|PLT9233G|PLT9735|PLT9760G|PLT9770G)\\\\b\",\n        \"YONESTablet\": \"BQ1078|BC1003|BC1077|RK9702|BC9730|BC9001|IT9001|BC7008|BC7010|BC708|BC728|BC7012|BC7030|BC7027|BC7026\",\n        \"ChangJiaTablet\": \"TPC7102|TPC7103|TPC7105|TPC7106|TPC7107|TPC7201|TPC7203|TPC7205|TPC7210|TPC7708|TPC7709|TPC7712|TPC7110|TPC8101|TPC8103|TPC8105|TPC8106|TPC8203|TPC8205|TPC8503|TPC9106|TPC9701|TPC97101|TPC97103|TPC97105|TPC97106|TPC97111|TPC97113|TPC97203|TPC97603|TPC97809|TPC97205|TPC10101|TPC10103|TPC10106|TPC10111|TPC10203|TPC10205|TPC10503\",\n        \"GUTablet\": \"TX-A1301|TX-M9002|Q702|kf026\",\n        \"PointOfViewTablet\": \"TAB-P506|TAB-navi-7-3G-M|TAB-P517|TAB-P-527|TAB-P701|TAB-P703|TAB-P721|TAB-P731N|TAB-P741|TAB-P825|TAB-P905|TAB-P925|TAB-PR945|TAB-PL1015|TAB-P1025|TAB-PI1045|TAB-P1325|TAB-PROTAB[0-9]+|TAB-PROTAB25|TAB-PROTAB26|TAB-PROTAB27|TAB-PROTAB26XL|TAB-PROTAB2-IPS9|TAB-PROTAB30-IPS9|TAB-PROTAB25XXL|TAB-PROTAB26-IPS10|TAB-PROTAB30-IPS10\",\n        \"OvermaxTablet\": \"OV-(SteelCore|NewBase|Basecore|Baseone|Exellen|Quattor|EduTab|Solution|ACTION|BasicTab|TeddyTab|MagicTab|Stream|TB-08|TB-09)|Qualcore 1027\",\n        \"HCLTablet\": \"HCL.*Tablet|Connect-3G-2.0|Connect-2G-2.0|ME Tablet U1|ME Tablet U2|ME Tablet G1|ME Tablet X1|ME Tablet Y2|ME Tablet Sync\",\n        \"DPSTablet\": \"DPS Dream 9|DPS Dual 7\",\n        \"VistureTablet\": \"V97 HD|i75 3G|Visture V4( HD)?|Visture V5( HD)?|Visture V10\",\n        \"CrestaTablet\": \"CTP(-)?810|CTP(-)?818|CTP(-)?828|CTP(-)?838|CTP(-)?888|CTP(-)?978|CTP(-)?980|CTP(-)?987|CTP(-)?988|CTP(-)?989\",\n        \"MediatekTablet\": \"\\\\bMT8125|MT8389|MT8135|MT8377\\\\b\",\n        \"ConcordeTablet\": \"Concorde([ ]+)?Tab|ConCorde ReadMan\",\n        \"GoCleverTablet\": \"GOCLEVER TAB|A7GOCLEVER|M1042|M7841|M742|R1042BK|R1041|TAB A975|TAB A7842|TAB A741|TAB A741L|TAB M723G|TAB M721|TAB A1021|TAB I921|TAB R721|TAB I720|TAB T76|TAB R70|TAB R76.2|TAB R106|TAB R83.2|TAB M813G|TAB I721|GCTA722|TAB I70|TAB I71|TAB S73|TAB R73|TAB R74|TAB R93|TAB R75|TAB R76.1|TAB A73|TAB A93|TAB A93.2|TAB T72|TAB R83|TAB R974|TAB R973|TAB A101|TAB A103|TAB A104|TAB A104.2|R105BK|M713G|A972BK|TAB A971|TAB R974.2|TAB R104|TAB R83.3|TAB A1042\",\n        \"ModecomTablet\": \"FreeTAB 9000|FreeTAB 7.4|FreeTAB 7004|FreeTAB 7800|FreeTAB 2096|FreeTAB 7.5|FreeTAB 1014|FreeTAB 1001 |FreeTAB 8001|FreeTAB 9706|FreeTAB 9702|FreeTAB 7003|FreeTAB 7002|FreeTAB 1002|FreeTAB 7801|FreeTAB 1331|FreeTAB 1004|FreeTAB 8002|FreeTAB 8014|FreeTAB 9704|FreeTAB 1003\",\n        \"VoninoTablet\": \"\\\\b(Argus[ _]?S|Diamond[ _]?79HD|Emerald[ _]?78E|Luna[ _]?70C|Onyx[ _]?S|Onyx[ _]?Z|Orin[ _]?HD|Orin[ _]?S|Otis[ _]?S|SpeedStar[ _]?S|Magnet[ _]?M9|Primus[ _]?94[ _]?3G|Primus[ _]?94HD|Primus[ _]?QS|Android.*\\\\bQ8\\\\b|Sirius[ _]?EVO[ _]?QS|Sirius[ _]?QS|Spirit[ _]?S)\\\\b\",\n        \"ECSTablet\": \"V07OT2|TM105A|S10OT1|TR10CS1\",\n        \"StorexTablet\": \"eZee[_']?(Tab|Go)[0-9]+|TabLC7|Looney Tunes Tab\",\n        \"VodafoneTablet\": \"SmartTab([ ]+)?[0-9]+|SmartTabII10|SmartTabII7|VF-1497|VFD 1400\",\n        \"EssentielBTablet\": \"Smart[ ']?TAB[ ]+?[0-9]+|Family[ ']?TAB2\",\n        \"RossMoorTablet\": \"RM-790|RM-997|RMD-878G|RMD-974R|RMT-705A|RMT-701|RME-601|RMT-501|RMT-711\",\n        \"iMobileTablet\": \"i-mobile i-note\",\n        \"TolinoTablet\": \"tolino tab [0-9.]+|tolino shine\",\n        \"AudioSonicTablet\": \"\\\\bC-22Q|T7-QC|T-17B|T-17P\\\\b\",\n        \"AMPETablet\": \"Android.* A78 \",\n        \"SkkTablet\": \"Android.* (SKYPAD|PHOENIX|CYCLOPS)\",\n        \"TecnoTablet\": \"TECNO P9|TECNO DP8D\",\n        \"JXDTablet\": \"Android.* \\\\b(F3000|A3300|JXD5000|JXD3000|JXD2000|JXD300B|JXD300|S5800|S7800|S602b|S5110b|S7300|S5300|S602|S603|S5100|S5110|S601|S7100a|P3000F|P3000s|P101|P200s|P1000m|P200m|P9100|P1000s|S6600b|S908|P1000|P300|S18|S6600|S9100)\\\\b\",\n        \"iJoyTablet\": \"Tablet (Spirit 7|Essentia|Galatea|Fusion|Onix 7|Landa|Titan|Scooby|Deox|Stella|Themis|Argon|Unique 7|Sygnus|Hexen|Finity 7|Cream|Cream X2|Jade|Neon 7|Neron 7|Kandy|Scape|Saphyr 7|Rebel|Biox|Rebel|Rebel 8GB|Myst|Draco 7|Myst|Tab7-004|Myst|Tadeo Jones|Tablet Boing|Arrow|Draco Dual Cam|Aurix|Mint|Amity|Revolution|Finity 9|Neon 9|T9w|Amity 4GB Dual Cam|Stone 4GB|Stone 8GB|Andromeda|Silken|X2|Andromeda II|Halley|Flame|Saphyr 9,7|Touch 8|Planet|Triton|Unique 10|Hexen 10|Memphis 4GB|Memphis 8GB|Onix 10)\",\n        \"FX2Tablet\": \"FX2 PAD7|FX2 PAD10\",\n        \"XoroTablet\": \"KidsPAD 701|PAD[ ]?712|PAD[ ]?714|PAD[ ]?716|PAD[ ]?717|PAD[ ]?718|PAD[ ]?720|PAD[ ]?721|PAD[ ]?722|PAD[ ]?790|PAD[ ]?792|PAD[ ]?900|PAD[ ]?9715D|PAD[ ]?9716DR|PAD[ ]?9718DR|PAD[ ]?9719QR|PAD[ ]?9720QR|TelePAD1030|Telepad1032|TelePAD730|TelePAD731|TelePAD732|TelePAD735Q|TelePAD830|TelePAD9730|TelePAD795|MegaPAD 1331|MegaPAD 1851|MegaPAD 2151\",\n        \"ViewsonicTablet\": \"ViewPad 10pi|ViewPad 10e|ViewPad 10s|ViewPad E72|ViewPad7|ViewPad E100|ViewPad 7e|ViewSonic VB733|VB100a\",\n        \"VerizonTablet\": \"QTAQZ3|QTAIR7|QTAQTZ3|QTASUN1|QTASUN2|QTAXIA1\",\n        \"OdysTablet\": \"LOOX|XENO10|ODYS[ -](Space|EVO|Xpress|NOON)|\\\\bXELIO\\\\b|Xelio10Pro|XELIO7PHONETAB|XELIO10EXTREME|XELIOPT2|NEO_QUAD10\",\n        \"CaptivaTablet\": \"CAPTIVA PAD\",\n        \"IconbitTablet\": \"NetTAB|NT-3702|NT-3702S|NT-3702S|NT-3603P|NT-3603P|NT-0704S|NT-0704S|NT-3805C|NT-3805C|NT-0806C|NT-0806C|NT-0909T|NT-0909T|NT-0907S|NT-0907S|NT-0902S|NT-0902S\",\n        \"TeclastTablet\": \"T98 4G|\\\\bP80\\\\b|\\\\bX90HD\\\\b|X98 Air|X98 Air 3G|\\\\bX89\\\\b|P80 3G|\\\\bX80h\\\\b|P98 Air|\\\\bX89HD\\\\b|P98 3G|\\\\bP90HD\\\\b|P89 3G|X98 3G|\\\\bP70h\\\\b|P79HD 3G|G18d 3G|\\\\bP79HD\\\\b|\\\\bP89s\\\\b|\\\\bA88\\\\b|\\\\bP10HD\\\\b|\\\\bP19HD\\\\b|G18 3G|\\\\bP78HD\\\\b|\\\\bA78\\\\b|\\\\bP75\\\\b|G17s 3G|G17h 3G|\\\\bP85t\\\\b|\\\\bP90\\\\b|\\\\bP11\\\\b|\\\\bP98t\\\\b|\\\\bP98HD\\\\b|\\\\bG18d\\\\b|\\\\bP85s\\\\b|\\\\bP11HD\\\\b|\\\\bP88s\\\\b|\\\\bA80HD\\\\b|\\\\bA80se\\\\b|\\\\bA10h\\\\b|\\\\bP89\\\\b|\\\\bP78s\\\\b|\\\\bG18\\\\b|\\\\bP85\\\\b|\\\\bA70h\\\\b|\\\\bA70\\\\b|\\\\bG17\\\\b|\\\\bP18\\\\b|\\\\bA80s\\\\b|\\\\bA11s\\\\b|\\\\bP88HD\\\\b|\\\\bA80h\\\\b|\\\\bP76s\\\\b|\\\\bP76h\\\\b|\\\\bP98\\\\b|\\\\bA10HD\\\\b|\\\\bP78\\\\b|\\\\bP88\\\\b|\\\\bA11\\\\b|\\\\bA10t\\\\b|\\\\bP76a\\\\b|\\\\bP76t\\\\b|\\\\bP76e\\\\b|\\\\bP85HD\\\\b|\\\\bP85a\\\\b|\\\\bP86\\\\b|\\\\bP75HD\\\\b|\\\\bP76v\\\\b|\\\\bA12\\\\b|\\\\bP75a\\\\b|\\\\bA15\\\\b|\\\\bP76Ti\\\\b|\\\\bP81HD\\\\b|\\\\bA10\\\\b|\\\\bT760VE\\\\b|\\\\bT720HD\\\\b|\\\\bP76\\\\b|\\\\bP73\\\\b|\\\\bP71\\\\b|\\\\bP72\\\\b|\\\\bT720SE\\\\b|\\\\bC520Ti\\\\b|\\\\bT760\\\\b|\\\\bT720VE\\\\b|T720-3GE|T720-WiFi\",\n        \"OndaTablet\": \"\\\\b(V975i|Vi30|VX530|V701|Vi60|V701s|Vi50|V801s|V719|Vx610w|VX610W|V819i|Vi10|VX580W|Vi10|V711s|V813|V811|V820w|V820|Vi20|V711|VI30W|V712|V891w|V972|V819w|V820w|Vi60|V820w|V711|V813s|V801|V819|V975s|V801|V819|V819|V818|V811|V712|V975m|V101w|V961w|V812|V818|V971|V971s|V919|V989|V116w|V102w|V973|Vi40)\\\\b[\\\\s]+|V10 \\\\b4G\\\\b\",\n        \"JaytechTablet\": \"TPC-PA762\",\n        \"BlaupunktTablet\": \"Endeavour 800NG|Endeavour 1010\",\n        \"DigmaTablet\": \"\\\\b(iDx10|iDx9|iDx8|iDx7|iDxD7|iDxD8|iDsQ8|iDsQ7|iDsQ8|iDsD10|iDnD7|3TS804H|iDsQ11|iDj7|iDs10)\\\\b\",\n        \"EvolioTablet\": \"ARIA_Mini_wifi|Aria[ _]Mini|Evolio X10|Evolio X7|Evolio X8|\\\\bEvotab\\\\b|\\\\bNeura\\\\b\",\n        \"LavaTablet\": \"QPAD E704|\\\\bIvoryS\\\\b|E-TAB IVORY|\\\\bE-TAB\\\\b\",\n        \"AocTablet\": \"MW0811|MW0812|MW0922|MTK8382|MW1031|MW0831|MW0821|MW0931|MW0712\",\n        \"MpmanTablet\": \"MP11 OCTA|MP10 OCTA|MPQC1114|MPQC1004|MPQC994|MPQC974|MPQC973|MPQC804|MPQC784|MPQC780|\\\\bMPG7\\\\b|MPDCG75|MPDCG71|MPDC1006|MP101DC|MPDC9000|MPDC905|MPDC706HD|MPDC706|MPDC705|MPDC110|MPDC100|MPDC99|MPDC97|MPDC88|MPDC8|MPDC77|MP709|MID701|MID711|MID170|MPDC703|MPQC1010\",\n        \"CelkonTablet\": \"CT695|CT888|CT[\\\\s]?910|CT7 Tab|CT9 Tab|CT3 Tab|CT2 Tab|CT1 Tab|C820|C720|\\\\bCT-1\\\\b\",\n        \"WolderTablet\": \"miTab \\\\b(DIAMOND|SPACE|BROOKLYN|NEO|FLY|MANHATTAN|FUNK|EVOLUTION|SKY|GOCAR|IRON|GENIUS|POP|MINT|EPSILON|BROADWAY|JUMP|HOP|LEGEND|NEW AGE|LINE|ADVANCE|FEEL|FOLLOW|LIKE|LINK|LIVE|THINK|FREEDOM|CHICAGO|CLEVELAND|BALTIMORE-GH|IOWA|BOSTON|SEATTLE|PHOENIX|DALLAS|IN 101|MasterChef)\\\\b\",\n        \"MediacomTablet\": \"M-MPI10C3G|M-SP10EG|M-SP10EGP|M-SP10HXAH|M-SP7HXAH|M-SP10HXBH|M-SP8HXAH|M-SP8MXA\",\n        \"MiTablet\": \"\\\\bMI PAD\\\\b|\\\\bHM NOTE 1W\\\\b\",\n        \"NibiruTablet\": \"Nibiru M1|Nibiru Jupiter One\",\n        \"NexoTablet\": \"NEXO NOVA|NEXO 10|NEXO AVIO|NEXO FREE|NEXO GO|NEXO EVO|NEXO 3G|NEXO SMART|NEXO KIDDO|NEXO MOBI\",\n        \"LeaderTablet\": \"TBLT10Q|TBLT10I|TBL-10WDKB|TBL-10WDKBO2013|TBL-W230V2|TBL-W450|TBL-W500|SV572|TBLT7I|TBA-AC7-8G|TBLT79|TBL-8W16|TBL-10W32|TBL-10WKB|TBL-W100\",\n        \"UbislateTablet\": \"UbiSlate[\\\\s]?7C\",\n        \"PocketBookTablet\": \"Pocketbook\",\n        \"KocasoTablet\": \"\\\\b(TB-1207)\\\\b\",\n        \"HisenseTablet\": \"\\\\b(F5281|E2371)\\\\b\",\n        \"Hudl\": \"Hudl HT7S3|Hudl 2\",\n        \"TelstraTablet\": \"T-Hub2\",\n        \"GenericTablet\": \"Android.*\\\\b97D\\\\b|Tablet(?!.*PC)|BNTV250A|MID-WCDMA|LogicPD Zoom2|\\\\bA7EB\\\\b|CatNova8|A1_07|CT704|CT1002|\\\\bM721\\\\b|rk30sdk|\\\\bEVOTAB\\\\b|M758A|ET904|ALUMIUM10|Smartfren Tab|Endeavour 1010|Tablet-PC-4|Tagi Tab|\\\\bM6pro\\\\b|CT1020W|arc 10HD|\\\\bTP750\\\\b|\\\\bQTAQZ3\\\\b|WVT101|TM1088|KT107\"\n    },\n    \"oss\": {\n        \"AndroidOS\": \"Android\",\n        \"BlackBerryOS\": \"blackberry|\\\\bBB10\\\\b|rim tablet os\",\n        \"PalmOS\": \"PalmOS|avantgo|blazer|elaine|hiptop|palm|plucker|xiino\",\n        \"SymbianOS\": \"Symbian|SymbOS|Series60|Series40|SYB-[0-9]+|\\\\bS60\\\\b\",\n        \"WindowsMobileOS\": \"Windows CE.*(PPC|Smartphone|Mobile|[0-9]{3}x[0-9]{3})|Windows Mobile|Windows Phone [0-9.]+|WCE;\",\n        \"WindowsPhoneOS\": \"Windows Phone 10.0|Windows Phone 8.1|Windows Phone 8.0|Windows Phone OS|XBLWP7|ZuneWP7|Windows NT 6.[23]; ARM;\",\n        \"iOS\": \"\\\\biPhone.*Mobile|\\\\biPod|\\\\biPad|AppleCoreMedia\",\n        \"iPadOS\": \"CPU OS 13\",\n        \"SailfishOS\": \"Sailfish\",\n        \"MeeGoOS\": \"MeeGo\",\n        \"MaemoOS\": \"Maemo\",\n        \"JavaOS\": \"J2ME\\/|\\\\bMIDP\\\\b|\\\\bCLDC\\\\b\",\n        \"webOS\": \"webOS|hpwOS\",\n        \"badaOS\": \"\\\\bBada\\\\b\",\n        \"BREWOS\": \"BREW\"\n    },\n    \"uas\": {\n        \"Chrome\": \"\\\\bCrMo\\\\b|CriOS|Android.*Chrome\\/[.0-9]* (Mobile)?\",\n        \"Dolfin\": \"\\\\bDolfin\\\\b\",\n        \"Opera\": \"Opera.*Mini|Opera.*Mobi|Android.*Opera|Mobile.*OPR\\/[0-9.]+$|Coast\\/[0-9.]+\",\n        \"Skyfire\": \"Skyfire\",\n        \"Edge\": \"\\\\bEdgiOS\\\\b|Mobile Safari\\/[.0-9]* Edge\",\n        \"IE\": \"IEMobile|MSIEMobile\",\n        \"Firefox\": \"fennec|firefox.*maemo|(Mobile|Tablet).*Firefox|Firefox.*Mobile|FxiOS\",\n        \"Bolt\": \"bolt\",\n        \"TeaShark\": \"teashark\",\n        \"Blazer\": \"Blazer\",\n        \"Safari\": \"Version((?!\\\\bEdgiOS\\\\b).)*Mobile.*Safari|Safari.*Mobile|MobileSafari\",\n        \"WeChat\": \"\\\\bMicroMessenger\\\\b\",\n        \"UCBrowser\": \"UC.*Browser|UCWEB\",\n        \"baiduboxapp\": \"baiduboxapp\",\n        \"baidubrowser\": \"baidubrowser\",\n        \"DiigoBrowser\": \"DiigoBrowser\",\n        \"Mercury\": \"\\\\bMercury\\\\b\",\n        \"ObigoBrowser\": \"Obigo\",\n        \"NetFront\": \"NF-Browser\",\n        \"GenericBrowser\": \"NokiaBrowser|OviBrowser|OneBrowser|TwonkyBeamBrowser|SEMC.*Browser|FlyFlow|Minimo|NetFront|Novarra-Vision|MQQBrowser|MicroMessenger\",\n        \"PaleMoon\": \"Android.*PaleMoon|Mobile.*PaleMoon\"\n    },\n    \"props\": {\n        \"Mobile\": \"Mobile\\/[VER]\",\n        \"Build\": \"Build\\/[VER]\",\n        \"Version\": \"Version\\/[VER]\",\n        \"VendorID\": \"VendorID\\/[VER]\",\n        \"iPad\": \"iPad.*CPU[a-z ]+[VER]\",\n        \"iPhone\": \"iPhone.*CPU[a-z ]+[VER]\",\n        \"iPod\": \"iPod.*CPU[a-z ]+[VER]\",\n        \"Kindle\": \"Kindle\\/[VER]\",\n        \"Chrome\": [\n            \"Chrome\\/[VER]\",\n            \"CriOS\\/[VER]\",\n            \"CrMo\\/[VER]\"\n        ],\n        \"Coast\": [\n            \"Coast\\/[VER]\"\n        ],\n        \"Dolfin\": \"Dolfin\\/[VER]\",\n        \"Firefox\": [\n            \"Firefox\\/[VER]\",\n            \"FxiOS\\/[VER]\"\n        ],\n        \"Fennec\": \"Fennec\\/[VER]\",\n        \"Edge\": \"Edge\\/[VER]\",\n        \"IE\": [\n            \"IEMobile\\/[VER];\",\n            \"IEMobile [VER]\",\n            \"MSIE [VER];\",\n            \"Trident\\/[0-9.]+;.*rv:[VER]\"\n        ],\n        \"NetFront\": \"NetFront\\/[VER]\",\n        \"NokiaBrowser\": \"NokiaBrowser\\/[VER]\",\n        \"Opera\": [\n            \" OPR\\/[VER]\",\n            \"Opera Mini\\/[VER]\",\n            \"Version\\/[VER]\"\n        ],\n        \"Opera Mini\": \"Opera Mini\\/[VER]\",\n        \"Opera Mobi\": \"Version\\/[VER]\",\n        \"UCBrowser\": [\n            \"UCWEB[VER]\",\n            \"UC.*Browser\\/[VER]\"\n        ],\n        \"MQQBrowser\": \"MQQBrowser\\/[VER]\",\n        \"MicroMessenger\": \"MicroMessenger\\/[VER]\",\n        \"baiduboxapp\": \"baiduboxapp\\/[VER]\",\n        \"baidubrowser\": \"baidubrowser\\/[VER]\",\n        \"SamsungBrowser\": \"SamsungBrowser\\/[VER]\",\n        \"Iron\": \"Iron\\/[VER]\",\n        \"Safari\": [\n            \"Version\\/[VER]\",\n            \"Safari\\/[VER]\"\n        ],\n        \"Skyfire\": \"Skyfire\\/[VER]\",\n        \"Tizen\": \"Tizen\\/[VER]\",\n        \"Webkit\": \"webkit[ \\/][VER]\",\n        \"PaleMoon\": \"PaleMoon\\/[VER]\",\n        \"SailfishBrowser\": \"SailfishBrowser\\/[VER]\",\n        \"Gecko\": \"Gecko\\/[VER]\",\n        \"Trident\": \"Trident\\/[VER]\",\n        \"Presto\": \"Presto\\/[VER]\",\n        \"Goanna\": \"Goanna\\/[VER]\",\n        \"iOS\": \" \\\\bi?OS\\\\b [VER][ ;]{1}\",\n        \"Android\": \"Android [VER]\",\n        \"Sailfish\": \"Sailfish [VER]\",\n        \"BlackBerry\": [\n            \"BlackBerry[\\\\w]+\\/[VER]\",\n            \"BlackBerry.*Version\\/[VER]\",\n            \"Version\\/[VER]\"\n        ],\n        \"BREW\": \"BREW [VER]\",\n        \"Java\": \"Java\\/[VER]\",\n        \"Windows Phone OS\": [\n            \"Windows Phone OS [VER]\",\n            \"Windows Phone [VER]\"\n        ],\n        \"Windows Phone\": \"Windows Phone [VER]\",\n        \"Windows CE\": \"Windows CE\\/[VER]\",\n        \"Windows NT\": \"Windows NT [VER]\",\n        \"Symbian\": [\n            \"SymbianOS\\/[VER]\",\n            \"Symbian\\/[VER]\"\n        ],\n        \"webOS\": [\n            \"webOS\\/[VER]\",\n            \"hpwOS\\/[VER];\"\n        ]\n    },\n    \"utils\": {\n        \"Bot\": \"Googlebot|facebookexternalhit|Google-AMPHTML|s~amp-validator|AdsBot-Google|Google Keyword Suggestion|Facebot|YandexBot|YandexMobileBot|bingbot|ia_archiver|AhrefsBot|Ezooms|GSLFbot|WBSearchBot|Twitterbot|TweetmemeBot|Twikle|PaperLiBot|Wotbox|UnwindFetchor|Exabot|MJ12bot|YandexImages|TurnitinBot|Pingdom|contentkingapp|AspiegelBot\",\n        \"MobileBot\": \"Googlebot-Mobile|AdsBot-Google-Mobile|YahooSeeker\\/M1A1-R2D2\",\n        \"DesktopMode\": \"WPDesktop\",\n        \"TV\": \"SonyDTV|HbbTV\",\n        \"WebKit\": \"(webkit)[ \\/]([\\\\w.]+)\",\n        \"Console\": \"\\\\b(Nintendo|Nintendo WiiU|Nintendo 3DS|Nintendo Switch|PLAYSTATION|Xbox)\\\\b\",\n        \"Watch\": \"SM-V700\"\n    }\n};\n\n    // following patterns come from http://detectmobilebrowsers.com/\n    impl.detectMobileBrowsers = {\n        fullPattern: /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i,\n        shortPattern: /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i,\n        tabletPattern: /android|ipad|playbook|silk/i\n    };\n\n    var hasOwnProp = Object.prototype.hasOwnProperty,\n        isArray;\n\n    impl.FALLBACK_PHONE = 'UnknownPhone';\n    impl.FALLBACK_TABLET = 'UnknownTablet';\n    impl.FALLBACK_MOBILE = 'UnknownMobile';\n\n    isArray = ('isArray' in Array) ?\n        Array.isArray : function (value) { return Object.prototype.toString.call(value) === '[object Array]'; };\n\n    function equalIC(a, b) {\n        return a != null && b != null && a.toLowerCase() === b.toLowerCase();\n    }\n\n    function containsIC(array, value) {\n        var valueLC, i, len = array.length;\n        if (!len || !value) {\n            return false;\n        }\n        valueLC = value.toLowerCase();\n        for (i = 0; i < len; ++i) {\n            if (valueLC === array[i].toLowerCase()) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    function convertPropsToRegExp(object) {\n        for (var key in object) {\n            if (hasOwnProp.call(object, key)) {\n                object[key] = new RegExp(object[key], 'i');\n            }\n        }\n    }\n\n    function prepareUserAgent(userAgent) {\n        return (userAgent || '').substr(0, 500); // mitigate vulnerable to ReDoS\n    }\n\n    (function init() {\n        var key, values, value, i, len, verPos, mobileDetectRules = impl.mobileDetectRules;\n        for (key in mobileDetectRules.props) {\n            if (hasOwnProp.call(mobileDetectRules.props, key)) {\n                values = mobileDetectRules.props[key];\n                if (!isArray(values)) {\n                    values = [values];\n                }\n                len = values.length;\n                for (i = 0; i < len; ++i) {\n                    value = values[i];\n                    verPos = value.indexOf('[VER]');\n                    if (verPos >= 0) {\n                        value = value.substring(0, verPos) + '([\\\\w._\\\\+]+)' + value.substring(verPos + 5);\n                    }\n                    values[i] = new RegExp(value, 'i');\n                }\n                mobileDetectRules.props[key] = values;\n            }\n        }\n        convertPropsToRegExp(mobileDetectRules.oss);\n        convertPropsToRegExp(mobileDetectRules.phones);\n        convertPropsToRegExp(mobileDetectRules.tablets);\n        convertPropsToRegExp(mobileDetectRules.uas);\n        convertPropsToRegExp(mobileDetectRules.utils);\n\n        // copy some patterns to oss0 which are tested first (see issue#15)\n        mobileDetectRules.oss0 = {\n            WindowsPhoneOS: mobileDetectRules.oss.WindowsPhoneOS,\n            WindowsMobileOS: mobileDetectRules.oss.WindowsMobileOS\n        };\n    }());\n\n    /**\n     * Test userAgent string against a set of rules and find the first matched key.\n     * @param {Object} rules (key is String, value is RegExp)\n     * @param {String} userAgent the navigator.userAgent (or HTTP-Header 'User-Agent').\n     * @returns {String|null} the matched key if found, otherwise <tt>null</tt>\n     * @private\n     */\n    impl.findMatch = function(rules, userAgent) {\n        for (var key in rules) {\n            if (hasOwnProp.call(rules, key)) {\n                if (rules[key].test(userAgent)) {\n                    return key;\n                }\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Test userAgent string against a set of rules and return an array of matched keys.\n     * @param {Object} rules (key is String, value is RegExp)\n     * @param {String} userAgent the navigator.userAgent (or HTTP-Header 'User-Agent').\n     * @returns {Array} an array of matched keys, may be empty when there is no match, but not <tt>null</tt>\n     * @private\n     */\n    impl.findMatches = function(rules, userAgent) {\n        var result = [];\n        for (var key in rules) {\n            if (hasOwnProp.call(rules, key)) {\n                if (rules[key].test(userAgent)) {\n                    result.push(key);\n                }\n            }\n        }\n        return result;\n    };\n\n    /**\n     * Check the version of the given property in the User-Agent.\n     *\n     * @param {String} propertyName\n     * @param {String} userAgent\n     * @return {String} version or <tt>null</tt> if version not found\n     * @private\n     */\n    impl.getVersionStr = function (propertyName, userAgent) {\n        var props = impl.mobileDetectRules.props, patterns, i, len, match;\n        if (hasOwnProp.call(props, propertyName)) {\n            patterns = props[propertyName];\n            len = patterns.length;\n            for (i = 0; i < len; ++i) {\n                match = patterns[i].exec(userAgent);\n                if (match !== null) {\n                    return match[1];\n                }\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Check the version of the given property in the User-Agent.\n     * Will return a float number. (eg. 2_0 will return 2.0, 4.3.1 will return 4.31)\n     *\n     * @param {String} propertyName\n     * @param {String} userAgent\n     * @return {Number} version or <tt>NaN</tt> if version not found\n     * @private\n     */\n    impl.getVersion = function (propertyName, userAgent) {\n        var version = impl.getVersionStr(propertyName, userAgent);\n        return version ? impl.prepareVersionNo(version) : NaN;\n    };\n\n    /**\n     * Prepare the version number.\n     *\n     * @param {String} version\n     * @return {Number} the version number as a floating number\n     * @private\n     */\n    impl.prepareVersionNo = function (version) {\n        var numbers;\n\n        numbers = version.split(/[a-z._ \\/\\-]/i);\n        if (numbers.length === 1) {\n            version = numbers[0];\n        }\n        if (numbers.length > 1) {\n            version = numbers[0] + '.';\n            numbers.shift();\n            version += numbers.join('');\n        }\n        return Number(version);\n    };\n\n    impl.isMobileFallback = function (userAgent) {\n        return impl.detectMobileBrowsers.fullPattern.test(userAgent) ||\n            impl.detectMobileBrowsers.shortPattern.test(userAgent.substr(0,4));\n    };\n\n    impl.isTabletFallback = function (userAgent) {\n        return impl.detectMobileBrowsers.tabletPattern.test(userAgent);\n    };\n\n    impl.prepareDetectionCache = function (cache, userAgent, maxPhoneWidth) {\n        if (cache.mobile !== undefined) {\n            return;\n        }\n        var phone, tablet, phoneSized;\n\n        // first check for stronger tablet rules, then phone (see issue#5)\n        tablet = impl.findMatch(impl.mobileDetectRules.tablets, userAgent);\n        if (tablet) {\n            cache.mobile = cache.tablet = tablet;\n            cache.phone = null;\n            return; // unambiguously identified as tablet\n        }\n\n        phone = impl.findMatch(impl.mobileDetectRules.phones, userAgent);\n        if (phone) {\n            cache.mobile = cache.phone = phone;\n            cache.tablet = null;\n            return; // unambiguously identified as phone\n        }\n\n        // our rules haven't found a match -> try more general fallback rules\n        if (impl.isMobileFallback(userAgent)) {\n            phoneSized = MobileDetect.isPhoneSized(maxPhoneWidth);\n            if (phoneSized === undefined) {\n                cache.mobile = impl.FALLBACK_MOBILE;\n                cache.tablet = cache.phone = null;\n            } else if (phoneSized) {\n                cache.mobile = cache.phone = impl.FALLBACK_PHONE;\n                cache.tablet = null;\n            } else {\n                cache.mobile = cache.tablet = impl.FALLBACK_TABLET;\n                cache.phone = null;\n            }\n        } else if (impl.isTabletFallback(userAgent)) {\n            cache.mobile = cache.tablet = impl.FALLBACK_TABLET;\n            cache.phone = null;\n        } else {\n            // not mobile at all!\n            cache.mobile = cache.tablet = cache.phone = null;\n        }\n    };\n\n    // t is a reference to a MobileDetect instance\n    impl.mobileGrade = function (t) {\n        // impl note:\n        // To keep in sync w/ Mobile_Detect.php easily, the following code is tightly aligned to the PHP version.\n        // When changes are made in Mobile_Detect.php, copy this method and replace:\n        //     $this-> / t.\n        //     self::MOBILE_GRADE_(.) / '$1'\n        //     , self::VERSION_TYPE_FLOAT / (nothing)\n        //     isIOS() / os('iOS')\n        //     [reg] / (nothing)   <-- jsdelivr complaining about unescaped unicode character U+00AE\n        var $isMobile = t.mobile() !== null;\n\n        if (\n            // Apple iOS 3.2-5.1 - Tested on the original iPad (4.3 / 5.0), iPad 2 (4.3), iPad 3 (5.1), original iPhone (3.1), iPhone 3 (3.2), 3GS (4.3), 4 (4.3 / 5.0), and 4S (5.1)\n            t.os('iOS') && t.version('iPad')>=4.3 ||\n            t.os('iOS') && t.version('iPhone')>=3.1 ||\n            t.os('iOS') && t.version('iPod')>=3.1 ||\n\n            // Android 2.1-2.3 - Tested on the HTC Incredible (2.2), original Droid (2.2), HTC Aria (2.1), Google Nexus S (2.3). Functional on 1.5 & 1.6 but performance may be sluggish, tested on Google G1 (1.5)\n            // Android 3.1 (Honeycomb)  - Tested on the Samsung Galaxy Tab 10.1 and Motorola XOOM\n            // Android 4.0 (ICS)  - Tested on a Galaxy Nexus. Note: transition performance can be poor on upgraded devices\n            // Android 4.1 (Jelly Bean)  - Tested on a Galaxy Nexus and Galaxy 7\n            ( t.version('Android')>2.1 && t.is('Webkit') ) ||\n\n            // Windows Phone 7-7.5 - Tested on the HTC Surround (7.0) HTC Trophy (7.5), LG-E900 (7.5), Nokia Lumia 800\n            t.version('Windows Phone OS')>=7.0 ||\n\n            // Blackberry 7 - Tested on BlackBerry Torch 9810\n            // Blackberry 6.0 - Tested on the Torch 9800 and Style 9670\n            t.is('BlackBerry') && t.version('BlackBerry')>=6.0 ||\n            // Blackberry Playbook (1.0-2.0) - Tested on PlayBook\n            t.match('Playbook.*Tablet') ||\n\n            // Palm WebOS (1.4-2.0) - Tested on the Palm Pixi (1.4), Pre (1.4), Pre 2 (2.0)\n            ( t.version('webOS')>=1.4 && t.match('Palm|Pre|Pixi') ) ||\n            // Palm WebOS 3.0  - Tested on HP TouchPad\n            t.match('hp.*TouchPad') ||\n\n            // Firefox Mobile (12 Beta) - Tested on Android 2.3 device\n            ( t.is('Firefox') && t.version('Firefox')>=12 ) ||\n\n            // Chrome for Android - Tested on Android 4.0, 4.1 device\n            ( t.is('Chrome') && t.is('AndroidOS') && t.version('Android')>=4.0 ) ||\n\n            // Skyfire 4.1 - Tested on Android 2.3 device\n            ( t.is('Skyfire') && t.version('Skyfire')>=4.1 && t.is('AndroidOS') && t.version('Android')>=2.3 ) ||\n\n            // Opera Mobile 11.5-12: Tested on Android 2.3\n            ( t.is('Opera') && t.version('Opera Mobi')>11 && t.is('AndroidOS') ) ||\n\n            // Meego 1.2 - Tested on Nokia 950 and N9\n            t.is('MeeGoOS') ||\n\n            // Tizen (pre-release) - Tested on early hardware\n            t.is('Tizen') ||\n\n            // Samsung Bada 2.0 - Tested on a Samsung Wave 3, Dolphin browser\n            // @todo: more tests here!\n            t.is('Dolfin') && t.version('Bada')>=2.0 ||\n\n            // UC Browser - Tested on Android 2.3 device\n            ( (t.is('UC Browser') || t.is('Dolfin')) && t.version('Android')>=2.3 ) ||\n\n            // Kindle 3 and Fire  - Tested on the built-in WebKit browser for each\n            ( t.match('Kindle Fire') ||\n                t.is('Kindle') && t.version('Kindle')>=3.0 ) ||\n\n            // Nook Color 1.4.1 - Tested on original Nook Color, not Nook Tablet\n            t.is('AndroidOS') && t.is('NookTablet') ||\n\n            // Chrome Desktop 11-21 - Tested on OS X 10.7 and Windows 7\n            t.version('Chrome')>=11 && !$isMobile ||\n\n            // Safari Desktop 4-5 - Tested on OS X 10.7 and Windows 7\n            t.version('Safari')>=5.0 && !$isMobile ||\n\n            // Firefox Desktop 4-13 - Tested on OS X 10.7 and Windows 7\n            t.version('Firefox')>=4.0 && !$isMobile ||\n\n            // Internet Explorer 7-9 - Tested on Windows XP, Vista and 7\n            t.version('MSIE')>=7.0 && !$isMobile ||\n\n            // Opera Desktop 10-12 - Tested on OS X 10.7 and Windows 7\n            // @reference: http://my.opera.com/community/openweb/idopera/\n            t.version('Opera')>=10 && !$isMobile\n\n            ){\n            return 'A';\n        }\n\n        if (\n            t.os('iOS') && t.version('iPad')<4.3 ||\n            t.os('iOS') && t.version('iPhone')<3.1 ||\n            t.os('iOS') && t.version('iPod')<3.1 ||\n\n            // Blackberry 5.0: Tested on the Storm 2 9550, Bold 9770\n            t.is('Blackberry') && t.version('BlackBerry')>=5 && t.version('BlackBerry')<6 ||\n\n            //Opera Mini (5.0-6.5) - Tested on iOS 3.2/4.3 and Android 2.3\n            ( t.version('Opera Mini')>=5.0 && t.version('Opera Mini')<=6.5 &&\n                (t.version('Android')>=2.3 || t.is('iOS')) ) ||\n\n            // Nokia Symbian^3 - Tested on Nokia N8 (Symbian^3), C7 (Symbian^3), also works on N97 (Symbian^1)\n            t.match('NokiaN8|NokiaC7|N97.*Series60|Symbian/3') ||\n\n            // @todo: report this (tested on Nokia N71)\n            t.version('Opera Mobi')>=11 && t.is('SymbianOS')\n            ){\n            return 'B';\n        }\n\n        if (\n        // Blackberry 4.x - Tested on the Curve 8330\n            t.version('BlackBerry')<5.0 ||\n            // Windows Mobile - Tested on the HTC Leo (WinMo 5.2)\n            t.match('MSIEMobile|Windows CE.*Mobile') || t.version('Windows Mobile')<=5.2\n\n            ){\n            return 'C';\n        }\n\n        //All older smartphone platforms and featurephones - Any device that doesn't support media queries\n        //will receive the basic, C grade experience.\n        return 'C';\n    };\n\n    impl.detectOS = function (ua) {\n        return impl.findMatch(impl.mobileDetectRules.oss0, ua) ||\n            impl.findMatch(impl.mobileDetectRules.oss, ua);\n    };\n\n    impl.getDeviceSmallerSide = function () {\n        return window.screen.width < window.screen.height ?\n            window.screen.width :\n            window.screen.height;\n    };\n\n    /**\n     * Constructor for MobileDetect object.\n     * <br>\n     * Such an object will keep a reference to the given user-agent string and cache most of the detect queries.<br>\n     * <div style=\"background-color: #d9edf7; border: 1px solid #bce8f1; color: #3a87ad; padding: 14px; border-radius: 2px; margin-top: 20px\">\n     *     <strong>Find information how to download and install:</strong>\n     *     <a href=\"https://github.com/hgoebl/mobile-detect.js/\">github.com/hgoebl/mobile-detect.js/</a>\n     * </div>\n     *\n     * @example <pre>\n     *     var md = new MobileDetect(window.navigator.userAgent);\n     *     if (md.mobile()) {\n     *         location.href = (md.mobileGrade() === 'A') ? '/mobile/' : '/lynx/';\n     *     }\n     * </pre>\n     *\n     * @param {string} userAgent typically taken from window.navigator.userAgent or http_header['User-Agent']\n     * @param {number} [maxPhoneWidth=600] <strong>only for browsers</strong> specify a value for the maximum\n     *        width of smallest device side (in logical \"CSS\" pixels) until a device detected as mobile will be handled\n     *        as phone.\n     *        This is only used in cases where the device cannot be classified as phone or tablet.<br>\n     *        See <a href=\"http://developer.android.com/guide/practices/screens_support.html\">Declaring Tablet Layouts\n     *        for Android</a>.<br>\n     *        If you provide a value < 0, then this \"fuzzy\" check is disabled.\n     * @constructor\n     * @global\n     */\n    function MobileDetect(userAgent, maxPhoneWidth) {\n        this.ua = prepareUserAgent(userAgent);\n        this._cache = {};\n        //600dp is typical 7\" tablet minimum width\n        this.maxPhoneWidth = maxPhoneWidth || 600;\n    }\n\n    MobileDetect.prototype = {\n        constructor: MobileDetect,\n\n        /**\n         * Returns the detected phone or tablet type or <tt>null</tt> if it is not a mobile device.\n         * <br>\n         * For a list of possible return values see {@link MobileDetect#phone} and {@link MobileDetect#tablet}.<br>\n         * <br>\n         * If the device is not detected by the regular expressions from Mobile-Detect, a test is made against\n         * the patterns of <a href=\"http://detectmobilebrowsers.com/\">detectmobilebrowsers.com</a>. If this test\n         * is positive, a value of <code>UnknownPhone</code>, <code>UnknownTablet</code> or\n         * <code>UnknownMobile</code> is returned.<br>\n         * When used in browser, the decision whether phone or tablet is made based on <code>screen.width/height</code>.<br>\n         * <br>\n         * When used server-side (node.js), there is no way to tell the difference between <code>UnknownTablet</code>\n         * and <code>UnknownMobile</code>, so you will get <code>UnknownMobile</code> here.<br>\n         * Be aware that since v1.0.0 in this special case you will get <code>UnknownMobile</code> only for:\n         * {@link MobileDetect#mobile}, not for {@link MobileDetect#phone} and {@link MobileDetect#tablet}.\n         * In versions before v1.0.0 all 3 methods returned <code>UnknownMobile</code> which was tedious to use.\n         * <br>\n         * In most cases you will use the return value just as a boolean.\n         *\n         * @returns {String} the key for the phone family or tablet family, e.g. \"Nexus\".\n         * @function MobileDetect#mobile\n         */\n        mobile: function () {\n            impl.prepareDetectionCache(this._cache, this.ua, this.maxPhoneWidth);\n            return this._cache.mobile;\n        },\n\n        /**\n         * Returns the detected phone type/family string or <tt>null</tt>.\n         * <br>\n         * The returned tablet (family or producer) is one of following keys:<br>\n         * <br><tt>iPhone, BlackBerry, Pixel, HTC, Nexus, Dell, Motorola, Samsung, LG, Sony, Asus,\n         * Xiaomi, NokiaLumia, Micromax, Palm, Vertu, Pantech, Fly, Wiko, iMobile,\n         * SimValley, Wolfgang, Alcatel, Nintendo, Amoi, INQ, OnePlus, GenericPhone</tt><br>\n         * <br>\n         * If the device is not detected by the regular expressions from Mobile-Detect, a test is made against\n         * the patterns of <a href=\"http://detectmobilebrowsers.com/\">detectmobilebrowsers.com</a>. If this test\n         * is positive, a value of <code>UnknownPhone</code> or <code>UnknownMobile</code> is returned.<br>\n         * When used in browser, the decision whether phone or tablet is made based on <code>screen.width/height</code>.<br>\n         * <br>\n         * When used server-side (node.js), there is no way to tell the difference between <code>UnknownTablet</code>\n         * and <code>UnknownMobile</code>, so you will get <code>null</code> here, while {@link MobileDetect#mobile}\n         * will return <code>UnknownMobile</code>.<br>\n         * Be aware that since v1.0.0 in this special case you will get <code>UnknownMobile</code> only for:\n         * {@link MobileDetect#mobile}, not for {@link MobileDetect#phone} and {@link MobileDetect#tablet}.\n         * In versions before v1.0.0 all 3 methods returned <code>UnknownMobile</code> which was tedious to use.\n         * <br>\n         * In most cases you will use the return value just as a boolean.\n         *\n         * @returns {String} the key of the phone family or producer, e.g. \"iPhone\"\n         * @function MobileDetect#phone\n         */\n        phone: function () {\n            impl.prepareDetectionCache(this._cache, this.ua, this.maxPhoneWidth);\n            return this._cache.phone;\n        },\n\n        /**\n         * Returns the detected tablet type/family string or <tt>null</tt>.\n         * <br>\n         * The returned tablet (family or producer) is one of following keys:<br>\n         * <br><tt>iPad, NexusTablet, GoogleTablet, SamsungTablet, Kindle, SurfaceTablet,\n         * HPTablet, AsusTablet, BlackBerryTablet, HTCtablet, MotorolaTablet, NookTablet,\n         * AcerTablet, ToshibaTablet, LGTablet, FujitsuTablet, PrestigioTablet,\n         * LenovoTablet, DellTablet, YarvikTablet, MedionTablet, ArnovaTablet,\n         * IntensoTablet, IRUTablet, MegafonTablet, EbodaTablet, AllViewTablet,\n         * ArchosTablet, AinolTablet, NokiaLumiaTablet, SonyTablet, PhilipsTablet,\n         * CubeTablet, CobyTablet, MIDTablet, MSITablet, SMiTTablet, RockChipTablet,\n         * FlyTablet, bqTablet, HuaweiTablet, NecTablet, PantechTablet, BronchoTablet,\n         * VersusTablet, ZyncTablet, PositivoTablet, NabiTablet, KoboTablet, DanewTablet,\n         * TexetTablet, PlaystationTablet, TrekstorTablet, PyleAudioTablet, AdvanTablet,\n         * DanyTechTablet, GalapadTablet, MicromaxTablet, KarbonnTablet, AllFineTablet,\n         * PROSCANTablet, YONESTablet, ChangJiaTablet, GUTablet, PointOfViewTablet,\n         * OvermaxTablet, HCLTablet, DPSTablet, VistureTablet, CrestaTablet,\n         * MediatekTablet, ConcordeTablet, GoCleverTablet, ModecomTablet, VoninoTablet,\n         * ECSTablet, StorexTablet, VodafoneTablet, EssentielBTablet, RossMoorTablet,\n         * iMobileTablet, TolinoTablet, AudioSonicTablet, AMPETablet, SkkTablet,\n         * TecnoTablet, JXDTablet, iJoyTablet, FX2Tablet, XoroTablet, ViewsonicTablet,\n         * VerizonTablet, OdysTablet, CaptivaTablet, IconbitTablet, TeclastTablet,\n         * OndaTablet, JaytechTablet, BlaupunktTablet, DigmaTablet, EvolioTablet,\n         * LavaTablet, AocTablet, MpmanTablet, CelkonTablet, WolderTablet, MediacomTablet,\n         * MiTablet, NibiruTablet, NexoTablet, LeaderTablet, UbislateTablet,\n         * PocketBookTablet, KocasoTablet, HisenseTablet, Hudl, TelstraTablet,\n         * GenericTablet</tt><br>\n         * <br>\n         * If the device is not detected by the regular expressions from Mobile-Detect, a test is made against\n         * the patterns of <a href=\"http://detectmobilebrowsers.com/\">detectmobilebrowsers.com</a>. If this test\n         * is positive, a value of <code>UnknownTablet</code> or <code>UnknownMobile</code> is returned.<br>\n         * When used in browser, the decision whether phone or tablet is made based on <code>screen.width/height</code>.<br>\n         * <br>\n         * When used server-side (node.js), there is no way to tell the difference between <code>UnknownTablet</code>\n         * and <code>UnknownMobile</code>, so you will get <code>null</code> here, while {@link MobileDetect#mobile}\n         * will return <code>UnknownMobile</code>.<br>\n         * Be aware that since v1.0.0 in this special case you will get <code>UnknownMobile</code> only for:\n         * {@link MobileDetect#mobile}, not for {@link MobileDetect#phone} and {@link MobileDetect#tablet}.\n         * In versions before v1.0.0 all 3 methods returned <code>UnknownMobile</code> which was tedious to use.\n         * <br>\n         * In most cases you will use the return value just as a boolean.\n         *\n         * @returns {String} the key of the tablet family or producer, e.g. \"SamsungTablet\"\n         * @function MobileDetect#tablet\n         */\n        tablet: function () {\n            impl.prepareDetectionCache(this._cache, this.ua, this.maxPhoneWidth);\n            return this._cache.tablet;\n        },\n\n        /**\n         * Returns the (first) detected user-agent string or <tt>null</tt>.\n         * <br>\n         * The returned user-agent is one of following keys:<br>\n         * <br><tt>Chrome, Dolfin, Opera, Skyfire, Edge, IE, Firefox, Bolt, TeaShark, Blazer,\n         * Safari, WeChat, UCBrowser, baiduboxapp, baidubrowser, DiigoBrowser, Mercury,\n         * ObigoBrowser, NetFront, GenericBrowser, PaleMoon</tt><br>\n         * <br>\n         * In most cases calling {@link MobileDetect#userAgent} will be sufficient. But there are rare\n         * cases where a mobile device pretends to be more than one particular browser. You can get the\n         * list of all matches with {@link MobileDetect#userAgents} or check for a particular value by\n         * providing one of the defined keys as first argument to {@link MobileDetect#is}.\n         *\n         * @returns {String} the key for the detected user-agent or <tt>null</tt>\n         * @function MobileDetect#userAgent\n         */\n        userAgent: function () {\n            if (this._cache.userAgent === undefined) {\n                this._cache.userAgent = impl.findMatch(impl.mobileDetectRules.uas, this.ua);\n            }\n            return this._cache.userAgent;\n        },\n\n        /**\n         * Returns all detected user-agent strings.\n         * <br>\n         * The array is empty or contains one or more of following keys:<br>\n         * <br><tt>Chrome, Dolfin, Opera, Skyfire, Edge, IE, Firefox, Bolt, TeaShark, Blazer,\n         * Safari, WeChat, UCBrowser, baiduboxapp, baidubrowser, DiigoBrowser, Mercury,\n         * ObigoBrowser, NetFront, GenericBrowser, PaleMoon</tt><br>\n         * <br>\n         * In most cases calling {@link MobileDetect#userAgent} will be sufficient. But there are rare\n         * cases where a mobile device pretends to be more than one particular browser. You can get the\n         * list of all matches with {@link MobileDetect#userAgents} or check for a particular value by\n         * providing one of the defined keys as first argument to {@link MobileDetect#is}.\n         *\n         * @returns {Array} the array of detected user-agent keys or <tt>[]</tt>\n         * @function MobileDetect#userAgents\n         */\n        userAgents: function () {\n            if (this._cache.userAgents === undefined) {\n                this._cache.userAgents = impl.findMatches(impl.mobileDetectRules.uas, this.ua);\n            }\n            return this._cache.userAgents;\n        },\n\n        /**\n         * Returns the detected operating system string or <tt>null</tt>.\n         * <br>\n         * The operating system is one of following keys:<br>\n         * <br><tt>AndroidOS, BlackBerryOS, PalmOS, SymbianOS, WindowsMobileOS, WindowsPhoneOS,\n         * iOS, iPadOS, SailfishOS, MeeGoOS, MaemoOS, JavaOS, webOS, badaOS, BREWOS</tt><br>\n         *\n         * @returns {String} the key for the detected operating system.\n         * @function MobileDetect#os\n         */\n        os: function () {\n            if (this._cache.os === undefined) {\n                this._cache.os = impl.detectOS(this.ua);\n            }\n            return this._cache.os;\n        },\n\n        /**\n         * Get the version (as Number) of the given property in the User-Agent.\n         * <br>\n         * Will return a float number. (eg. 2_0 will return 2.0, 4.3.1 will return 4.31)\n         *\n         * @param {String} key a key defining a thing which has a version.<br>\n         *        You can use one of following keys:<br>\n         * <br><tt>Mobile, Build, Version, VendorID, iPad, iPhone, iPod, Kindle, Chrome, Coast,\n         * Dolfin, Firefox, Fennec, Edge, IE, NetFront, NokiaBrowser, Opera, Opera Mini,\n         * Opera Mobi, UCBrowser, MQQBrowser, MicroMessenger, baiduboxapp, baidubrowser,\n         * SamsungBrowser, Iron, Safari, Skyfire, Tizen, Webkit, PaleMoon,\n         * SailfishBrowser, Gecko, Trident, Presto, Goanna, iOS, Android, Sailfish,\n         * BlackBerry, BREW, Java, Windows Phone OS, Windows Phone, Windows CE, Windows\n         * NT, Symbian, webOS</tt><br>\n         *\n         * @returns {Number} the version as float or <tt>NaN</tt> if User-Agent doesn't contain this version.\n         *          Be careful when comparing this value with '==' operator!\n         * @function MobileDetect#version\n         */\n        version: function (key) {\n            return impl.getVersion(key, this.ua);\n        },\n\n        /**\n         * Get the version (as String) of the given property in the User-Agent.\n         * <br>\n         *\n         * @param {String} key a key defining a thing which has a version.<br>\n         *        You can use one of following keys:<br>\n         * <br><tt>Mobile, Build, Version, VendorID, iPad, iPhone, iPod, Kindle, Chrome, Coast,\n         * Dolfin, Firefox, Fennec, Edge, IE, NetFront, NokiaBrowser, Opera, Opera Mini,\n         * Opera Mobi, UCBrowser, MQQBrowser, MicroMessenger, baiduboxapp, baidubrowser,\n         * SamsungBrowser, Iron, Safari, Skyfire, Tizen, Webkit, PaleMoon,\n         * SailfishBrowser, Gecko, Trident, Presto, Goanna, iOS, Android, Sailfish,\n         * BlackBerry, BREW, Java, Windows Phone OS, Windows Phone, Windows CE, Windows\n         * NT, Symbian, webOS</tt><br>\n         *\n         * @returns {String} the \"raw\" version as String or <tt>null</tt> if User-Agent doesn't contain this version.\n         *\n         * @function MobileDetect#versionStr\n         */\n        versionStr: function (key) {\n            return impl.getVersionStr(key, this.ua);\n        },\n\n        /**\n         * Global test key against userAgent, os, phone, tablet and some other properties of userAgent string.\n         *\n         * @param {String} key the key (case-insensitive) of a userAgent, an operating system, phone or\n         *        tablet family.<br>\n         *        For a complete list of possible values, see {@link MobileDetect#userAgent},\n         *        {@link MobileDetect#os}, {@link MobileDetect#phone}, {@link MobileDetect#tablet}.<br>\n         *        Additionally you have following keys:<br>\n         * <br><tt>Bot, MobileBot, DesktopMode, TV, WebKit, Console, Watch</tt><br>\n         *\n         * @returns {boolean} <tt>true</tt> when the given key is one of the defined keys of userAgent, os, phone,\n         *                    tablet or one of the listed additional keys, otherwise <tt>false</tt>\n         * @function MobileDetect#is\n         */\n        is: function (key) {\n            return containsIC(this.userAgents(), key) ||\n                   equalIC(key, this.os()) ||\n                   equalIC(key, this.phone()) ||\n                   equalIC(key, this.tablet()) ||\n                   containsIC(impl.findMatches(impl.mobileDetectRules.utils, this.ua), key);\n        },\n\n        /**\n         * Do a quick test against navigator::userAgent.\n         *\n         * @param {String|RegExp} pattern the pattern, either as String or RegExp\n         *                        (a string will be converted to a case-insensitive RegExp).\n         * @returns {boolean} <tt>true</tt> when the pattern matches, otherwise <tt>false</tt>\n         * @function MobileDetect#match\n         */\n        match: function (pattern) {\n            if (!(pattern instanceof RegExp)) {\n                pattern = new RegExp(pattern, 'i');\n            }\n            return pattern.test(this.ua);\n        },\n\n        /**\n         * Checks whether the mobile device can be considered as phone regarding <code>screen.width</code>.\n         * <br>\n         * Obviously this method makes sense in browser environments only (not for Node.js)!\n         * @param {number} [maxPhoneWidth] the maximum logical pixels (aka. CSS-pixels) to be considered as phone.<br>\n         *        The argument is optional and if not present or falsy, the value of the constructor is taken.\n         * @returns {boolean|undefined} <code>undefined</code> if screen size wasn't detectable, else <code>true</code>\n         *          when screen.width is less or equal to maxPhoneWidth, otherwise <code>false</code>.<br>\n         *          Will always return <code>undefined</code> server-side.\n         */\n        isPhoneSized: function (maxPhoneWidth) {\n            return MobileDetect.isPhoneSized(maxPhoneWidth || this.maxPhoneWidth);\n        },\n\n        /**\n         * Returns the mobile grade ('A', 'B', 'C').\n         *\n         * @returns {String} one of the mobile grades ('A', 'B', 'C').\n         * @function MobileDetect#mobileGrade\n         */\n        mobileGrade: function () {\n            if (this._cache.grade === undefined) {\n                this._cache.grade = impl.mobileGrade(this);\n            }\n            return this._cache.grade;\n        }\n    };\n\n    // environment-dependent\n    if (typeof window !== 'undefined' && window.screen) {\n        MobileDetect.isPhoneSized = function (maxPhoneWidth) {\n            return maxPhoneWidth < 0 ? undefined : impl.getDeviceSmallerSide() <= maxPhoneWidth;\n        };\n    } else {\n        MobileDetect.isPhoneSized = function () {};\n    }\n\n    // should not be replaced by a completely new object - just overwrite existing methods\n    MobileDetect._impl = impl;\n    \n    MobileDetect.version = '1.4.5 2021-03-13';\n\n    return MobileDetect;\n}); // end of call of define()\n})((function (undefined) {\n    if ( true && module.exports) {\n        return function (factory) { module.exports = factory(); };\n    } else if (true) {\n        return __webpack_require__.amdD;\n    } else {}\n})());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mobile-detect/mobile-detect.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/amd define */
/******/ 	(() => {
/******/ 		__webpack_require__.amdD = function () {
/******/ 			throw new Error('define cannot be used indirect');
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/main.js");
/******/ 	
/******/ })()
;